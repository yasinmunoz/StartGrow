// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas automatizadas de IU.
//      Versión: 15.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace StartGrow.UIT
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// InversionCorrecta: use 'InversionCorrectaParams' para pasar parámetros a este método.
        /// </summary>
        public void InversionCorrecta()
        {
            #region Variable Declarations
            HtmlEdit uIEmailEdit = this.UILoginStartGrowInternWindow.UILoginStartGrowDocument2.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UILoginStartGrowInternWindow.UILoginStartGrowDocument2.UIPasswordEdit;
            HtmlCheckBox uIIdsToAddCheckBox = this.UILoginStartGrowInternWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox;
            HtmlCheckBox uIIdsToAddCheckBox1 = this.UILoginStartGrowInternWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox1;
            WinToolBar uINotificaciónToolBar = this.UILoginStartGrowInternWindow.UIItemWindow.UISelectProyectosForInClient.UINotificaciónToolBar;
            WinButton uISÍButton = this.UILoginStartGrowInternWindow.UINotificaciónToolBar.UISÍButton;
            HtmlButton uIContinuarButton = this.UILoginStartGrowInternWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlComboBox uIInversiones0TiposInvComboBox = this.UILoginStartGrowInternWindow.UICreateStartGrowDocument.UIInversiones0TiposInvComboBox;
            HtmlComboBox uIInversiones1TiposInvComboBox = this.UILoginStartGrowInternWindow.UICreateStartGrowDocument.UIInversiones1TiposInvComboBox;
            HtmlEdit uIInversiones0CuotaEdit = this.UILoginStartGrowInternWindow.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlEdit uIInversiones1CuotaEdit = this.UILoginStartGrowInternWindow.UICreateStartGrowDocument.UIInversiones1CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UILoginStartGrowInternWindow.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Escribir 'gregorio' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.InversionCorrectaParams.UIEmailEditText;

            // Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.InversionCorrectaParams.UIEmailEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Escribir 'gregorio@uclm.com' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.InversionCorrectaParams.UIEmailEditText1;

            // Escribir '{Tab}' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.InversionCorrectaParams.UIEmailEditSendKeys1, ModifierKeys.None);

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.InversionCorrectaParams.UIPasswordEditPassword;

            // Escribir '{Enter}' en cuadro de texto 'Password'
            Keyboard.SendKeys(uIPasswordEdit, this.InversionCorrectaParams.UIPasswordEditSendKeys, ModifierKeys.None);

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.InversionCorrectaParams.UIIdsToAddCheckBoxChecked;

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox1.Checked = this.InversionCorrectaParams.UIIdsToAddCheckBox1Checked;

            // Establezca la marca para permitir que la reproducción continúe si no hay errores en ninguna acción esencial. (Por ejemplo, si el error es en una acción de mantener el mouse.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Clic 'Notificación' barra de herramientas
            Mouse.Click(uINotificaciónToolBar, new Point(767, 40));

            // Clic 'Sí' botón
            Mouse.Click(uISÍButton, new Point(21, 14));

            // Restablezca la marca para asegurarse de que la reproducción se detenga si hay un error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(42, 24));

            // Seleccionar 'Business Angels' en cuadro combinado 'inversiones[0].TiposInversionSelected'
            uIInversiones0TiposInvComboBox.SelectedItem = this.InversionCorrectaParams.UIInversiones0TiposInvComboBoxSelectedItem;

            // Seleccionar 'Venture Capital' en cuadro combinado 'inversiones[1].TiposInversionSelected'
            uIInversiones1TiposInvComboBox.SelectedItem = this.InversionCorrectaParams.UIInversiones1TiposInvComboBoxSelectedItem;

            // Escribir '2500' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.InversionCorrectaParams.UIInversiones0CuotaEditText;

            // Escribir '600' en cuadro de texto 'inversiones[1].Cuota'
            uIInversiones1CuotaEdit.Text = this.InversionCorrectaParams.UIInversiones1CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(31, 19));
        }
        
        #region Properties
        public virtual InversionCorrectaParams InversionCorrectaParams
        {
            get
            {
                if ((this.mInversionCorrectaParams == null))
                {
                    this.mInversionCorrectaParams = new InversionCorrectaParams();
                }
                return this.mInversionCorrectaParams;
            }
        }
        
        public UILoginStartGrowInternWindow UILoginStartGrowInternWindow
        {
            get
            {
                if ((this.mUILoginStartGrowInternWindow == null))
                {
                    this.mUILoginStartGrowInternWindow = new UILoginStartGrowInternWindow();
                }
                return this.mUILoginStartGrowInternWindow;
            }
        }
        
        public UISeleccionelosproyectWindow UISeleccionelosproyectWindow
        {
            get
            {
                if ((this.mUISeleccionelosproyectWindow == null))
                {
                    this.mUISeleccionelosproyectWindow = new UISeleccionelosproyectWindow();
                }
                return this.mUISeleccionelosproyectWindow;
            }
        }
        #endregion
        
        #region Fields
        private InversionCorrectaParams mInversionCorrectaParams;
        
        private UILoginStartGrowInternWindow mUILoginStartGrowInternWindow;
        
        private UISeleccionelosproyectWindow mUISeleccionelosproyectWindow;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InversionCorrecta'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class InversionCorrectaParams
    {
        
        #region Fields
        /// <summary>
        /// Escribir 'gregorio' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "gregorio";
        
        /// <summary>
        /// Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys = "2";
        
        /// <summary>
        /// Escribir 'gregorio@uclm.com' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText1 = "gregorio@uclm.com";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "wuYju7QJocI/k7Sw4wzDUdV6p1gwECR4Gz+0C8KKyU8=";
        
        /// <summary>
        /// Escribir '{Enter}' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar 'Business Angels' en cuadro combinado 'inversiones[0].TiposInversionSelected'
        /// </summary>
        public string UIInversiones0TiposInvComboBoxSelectedItem = "Business Angels";
        
        /// <summary>
        /// Seleccionar 'Venture Capital' en cuadro combinado 'inversiones[1].TiposInversionSelected'
        /// </summary>
        public string UIInversiones1TiposInvComboBoxSelectedItem = "Venture Capital";
        
        /// <summary>
        /// Escribir '2500' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "2500";
        
        /// <summary>
        /// Escribir '600' en cuadro de texto 'inversiones[1].Cuota'
        /// </summary>
        public string UIInversiones1CuotaEditText = "600";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowInternWindow : BrowserWindow
    {
        
        public UILoginStartGrowInternWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Log in - StartGrow");
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILoginStartGrowDocument UILoginStartGrowDocument
        {
            get
            {
                if ((this.mUILoginStartGrowDocument == null))
                {
                    this.mUILoginStartGrowDocument = new UILoginStartGrowDocument(this);
                }
                return this.mUILoginStartGrowDocument;
            }
        }
        
        public UILoginStartGrowDocument1 UILoginStartGrowDocument1
        {
            get
            {
                if ((this.mUILoginStartGrowDocument1 == null))
                {
                    this.mUILoginStartGrowDocument1 = new UILoginStartGrowDocument1(this);
                }
                return this.mUILoginStartGrowDocument1;
            }
        }
        
        public UILoginStartGrowDocument2 UILoginStartGrowDocument2
        {
            get
            {
                if ((this.mUILoginStartGrowDocument2 == null))
                {
                    this.mUILoginStartGrowDocument2 = new UILoginStartGrowDocument2(this);
                }
                return this.mUILoginStartGrowDocument2;
            }
        }
        
        public UISelectProyectosForInDocument UISelectProyectosForInDocument
        {
            get
            {
                if ((this.mUISelectProyectosForInDocument == null))
                {
                    this.mUISelectProyectosForInDocument = new UISelectProyectosForInDocument(this);
                }
                return this.mUISelectProyectosForInDocument;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UINotificaciónToolBar UINotificaciónToolBar
        {
            get
            {
                if ((this.mUINotificaciónToolBar == null))
                {
                    this.mUINotificaciónToolBar = new UINotificaciónToolBar(this);
                }
                return this.mUINotificaciónToolBar;
            }
        }
        
        public UICreateStartGrowDocument UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UILoginStartGrowDocument mUILoginStartGrowDocument;
        
        private UILoginStartGrowDocument1 mUILoginStartGrowDocument1;
        
        private UILoginStartGrowDocument2 mUILoginStartGrowDocument2;
        
        private UISelectProyectosForInDocument mUISelectProyectosForInDocument;
        
        private UIItemWindow mUIItemWindow;
        
        private UINotificaciónToolBar mUINotificaciónToolBar;
        
        private UICreateStartGrowDocument mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowDocument : HtmlDocument
    {
        
        public UILoginStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Account/Login";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:60421/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUILoginHyperlink.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlButton mUILoginButton;
        
        private HtmlHyperlink mUILoginHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowDocument1 : HtmlDocument
    {
        
        public UILoginStartGrowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Account/Login?ReturnUrl=%2F";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control valid";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control valid\" ";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUILoginButton.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:60421/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUILoginHyperlink.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlButton mUILoginButton;
        
        private HtmlHyperlink mUILoginHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowDocument2 : HtmlDocument
    {
        
        public UILoginStartGrowDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Account/Login?ReturnUrl=%2FInversions%2FSelectProyectosFo" +
                "rInversion";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInDocument : HtmlDocument
    {
        
        public UISelectProyectosForInDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SelectProyectosForInversion - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/SelectProyectosForInversion";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/SelectProyectosForInversion";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "2";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"2";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "33";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox1
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox1 == null))
                {
                    this.mUIIdsToAddCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "3";
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"3";
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "34";
                    this.mUIIdsToAddCheckBox1.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox1;
            }
        }
        
        public HtmlButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIContinuarButton.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlCheckBox mUIIdsToAddCheckBox1;
        
        private HtmlButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Frame Notification Bar";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public UISelectProyectosForInClient UISelectProyectosForInClient
        {
            get
            {
                if ((this.mUISelectProyectosForInClient == null))
                {
                    this.mUISelectProyectosForInClient = new UISelectProyectosForInClient(this);
                }
                return this.mUISelectProyectosForInClient;
            }
        }
        #endregion
        
        #region Fields
        private UISelectProyectosForInClient mUISelectProyectosForInClient;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInClient : WinClient
    {
        
        public UISelectProyectosForInClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public WinToolBar UINotificaciónToolBar
        {
            get
            {
                if ((this.mUINotificaciónToolBar == null))
                {
                    this.mUINotificaciónToolBar = new WinToolBar(this);
                    #region Criterio de búsqueda
                    this.mUINotificaciónToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "Notificación";
                    this.mUINotificaciónToolBar.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUINotificaciónToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUINotificaciónToolBar;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UINotificaciónToolBar : WinToolBar
    {
        
        public UINotificaciónToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Notificación";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public WinButton UISÍButton
        {
            get
            {
                if ((this.mUISÍButton == null))
                {
                    this.mUISÍButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUISÍButton.SearchProperties[WinButton.PropertyNames.Name] = "Sí";
                    this.mUISÍButton.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUISÍButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISÍButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument : HtmlDocument
    {
        
        public UICreateStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create?IdsToAdd=2&IdsToAdd=3";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIInversiones0TiposInvComboBox
        {
            get
            {
                if ((this.mUIInversiones0TiposInvComboBox == null))
                {
                    this.mUIInversiones0TiposInvComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "inversiones_0__TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "inversiones[0].TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"inversiones[0].TiposInversionSelec";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIInversiones0TiposInvComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0TiposInvComboBox;
            }
        }
        
        public HtmlComboBox UIInversiones1TiposInvComboBox
        {
            get
            {
                if ((this.mUIInversiones1TiposInvComboBox == null))
                {
                    this.mUIInversiones1TiposInvComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones1TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "inversiones_1__TiposInversionSelected";
                    this.mUIInversiones1TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "inversiones[1].TiposInversionSelected";
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"inversiones[1].TiposInversionSelec";
                    this.mUIInversiones1TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones1TiposInvComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones1TiposInvComboBox;
            }
        }
        
        public HtmlEdit UIInversiones0CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones0CuotaEdit == null))
                {
                    this.mUIInversiones0CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_0__Cuota";
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[0].Cuota";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[0].Cuota\" id=\"inversio";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones0CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0CuotaEdit;
            }
        }
        
        public HtmlEdit UIInversiones1CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones1CuotaEdit == null))
                {
                    this.mUIInversiones1CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones1CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_1__Cuota";
                    this.mUIInversiones1CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[1].Cuota";
                    this.mUIInversiones1CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones1CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones1CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones1CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones1CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[1].Cuota\" id=\"inversio";
                    this.mUIInversiones1CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "17";
                    this.mUIInversiones1CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones1CuotaEdit;
            }
        }
        
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "32";
                    this.mUIContinuarButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIInversiones0TiposInvComboBox;
        
        private HtmlComboBox mUIInversiones1TiposInvComboBox;
        
        private HtmlEdit mUIInversiones0CuotaEdit;
        
        private HtmlEdit mUIInversiones1CuotaEdit;
        
        private HtmlInputButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectWindow : BrowserWindow
    {
        
        public UISeleccionelosproyectWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionelosproyectDocument UISeleccionelosproyectDocument
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument == null))
                {
                    this.mUISeleccionelosproyectDocument = new UISeleccionelosproyectDocument(this);
                }
                return this.mUISeleccionelosproyectDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionelosproyectDocument mUISeleccionelosproyectDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIAreasSeleccionadaCheckBox
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox == null))
                {
                    this.mUIAreasSeleccionadaCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Salud";
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "3";
                    this.mUIAreasSeleccionadaCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox1
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox1 == null))
                {
                    this.mUIAreasSeleccionadaCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Drogería";
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "5";
                    this.mUIAreasSeleccionadaCheckBox1.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox1;
            }
        }
        
        public HtmlEdit UINombredelproyectoEdit
        {
            get
            {
                if ((this.mUINombredelproyectoEdit == null))
                {
                    this.mUINombredelproyectoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUINombredelproyectoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "nombreProyecto";
                    this.mUINombredelproyectoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "nombreProyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Nombre del proyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"nombreProyecto\" id=\"nombreProyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINombredelproyectoEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUINombredelproyectoEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox1;
        
        private HtmlEdit mUINombredelproyectoEdit;
        #endregion
    }
}
