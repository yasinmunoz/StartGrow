// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas automatizadas de IU.
//      Versión: 15.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace StartGrow.UIT.PublicarProyectos.PublicarProyectoUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public partial class PublicarProyectoUIMap
    {
        
        /// <summary>
        /// Método para acceder a la pagina del Login de la App.
        /// </summary>
        public void AccederApp()
        {
            #region Variable Declarations
            BrowserWindow uILoginStartGrowInternWindow = this.UILoginStartGrowInternWindow;
            #endregion

            // Esperar durante 1 segundos al retraso del usuario entre acciones; Ir a página web 'http://localhost:60421/'
            Playback.Wait(1000);
            uILoginStartGrowInternWindow.NavigateToUrl(new System.Uri(this.AccederAppParams.UILoginStartGrowInternWindowUrl));
        }
        
        /// <summary>
        /// Aserción del botón de Login de la App.
        /// </summary>
        public void AsercionBotonLogin()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UILoginStartGrowInternWindow.UILoginStartGrowDocument.UILoginHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Log in' vínculo es igual a 'Log in'
            Assert.AreEqual(this.AsercionBotonLoginExpectedValues.UILoginHyperlinkInnerText, uILoginHyperlink.InnerText, "No aparece el botón de Login.");
        }
        
        /// <summary>
        /// Login en la App.
        /// </summary>
        public void LoginEnApp()
        {
            #region Variable Declarations
            HtmlEdit uIEmailEdit = this.UILoginStartGrowInternWindow.UILoginStartGrowDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UILoginStartGrowInternWindow.UILoginStartGrowDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UILoginStartGrowInternWindow.UILoginStartGrowDocument.UILoginButton;
            #endregion

            // Esperar durante 1 segundos al retraso del usuario entre acciones; Escribir 'sergio' en cuadro de texto 'Email'
            Playback.Wait(1000);
            uIEmailEdit.Text = this.LoginEnAppParams.UIEmailEditText;

            // Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
            Keyboard.SendKeys(uIEmailEdit, this.LoginEnAppParams.UIEmailEditSendKeys, (ModifierKeys.Alt | ModifierKeys.Control));

            // Escribir 'sergio@startgrow.trabajador.com' en cuadro de texto 'Email'
            uIEmailEdit.Text = this.LoginEnAppParams.UIEmailEditText1;

            // Escribir '********' en cuadro de texto 'Password'
            uIPasswordEdit.Password = this.LoginEnAppParams.UIPasswordEditPassword;

            // Clic 'Log in' botón
            Mouse.Click(uILoginButton, new Point(47, 35));
        }
        
        /// <summary>
        /// Comprobación del login correcto.
        /// </summary>
        public void AsercionLoginCorrecto()
        {
            #region Variable Declarations
            HtmlHyperlink uIHellosergiostartgrowHyperlink = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UILogoutFormCustom.UIHellosergiostartgrowHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Hello sergio@startgrow.trabajador.com!' vínculo es igual a 'Hello sergio@startgrow.trabajador.com!'
            Assert.AreEqual(this.AsercionLoginCorrectoExpectedValues.UIHellosergiostartgrowHyperlinkInnerText, uIHellosergiostartgrowHyperlink.InnerText, "El usuario no se ha logeado correctamente en el sistema.");
        }
        
        /// <summary>
        /// Comprobar que accede a la página de los proyectos.
        /// </summary>
        public void AsercionNombreProyecto()
        {
            #region Variable Declarations
            HtmlLabel uINombredelproyectoLabel = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UINombredelproyectoLabel;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Nombre del proyecto' etiqueta es igual a 'Nombre del proyecto'
            Assert.AreEqual(this.AsercionNombreProyectoExpectedValues.UINombredelproyectoLabelInnerText, uINombredelproyectoLabel.InnerText, "No accede al CU.");
        }
        
        /// <summary>
        /// Filtramos los proyectos por tipo (crownfunding) y por capital (64000)
        /// </summary>
        public void FiltrarProyectos()
        {
            #region Variable Declarations
            HtmlCheckBox uIAreasSeleccionadaCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIAreasSeleccionadaCheckBox;
            HtmlCheckBox uITipoSeleccionadoCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UITipoSeleccionadoCheckBox;
            HtmlEdit uICapitalEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UICapitalEdit;
            HtmlInputButton uIFiltrarButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIFiltrarButton;
            #endregion

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox.Checked = this.FiltrarProyectosParams.UIAreasSeleccionadaCheckBoxChecked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox.Checked = this.FiltrarProyectosParams.UITipoSeleccionadoCheckBoxChecked;

            // Escribir '64000' en cuadro de texto 'Capital'
            uICapitalEdit.Text = this.FiltrarProyectosParams.UICapitalEditText;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(22, 12));
        }
        
        /// <summary>
        /// Aserción para el tipo de inversion (crownfunding)
        /// </summary>
        public void AsercionTipoInversion()
        {
            #region Variable Declarations
            HtmlCell uICrownfundingCell = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument1.UIItemTable.UICrownfundingCell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Crownfunding' celda es igual a 'Crownfunding '
            Assert.AreEqual(this.AsercionTipoInversionExpectedValues.UICrownfundingCellInnerText, uICrownfundingCell.InnerText, "No funcionan los filtros establecidos.");
        }
        
        /// <summary>
        /// Filtro de proyectos por área (automóviles) y por tipo (veture capital)
        /// </summary>
        public void FiltrarProyectos2()
        {
            #region Variable Declarations
            HtmlCheckBox uIAreasSeleccionadaCheckBox1 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIAreasSeleccionadaCheckBox1;
            HtmlCheckBox uITipoSeleccionadoCheckBox1 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UITipoSeleccionadoCheckBox1;
            HtmlInputButton uIFiltrarButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIFiltrarButton;
            #endregion

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox1.Checked = this.FiltrarProyectos2Params.UIAreasSeleccionadaCheckBox1Checked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox1.Checked = this.FiltrarProyectos2Params.UITipoSeleccionadoCheckBox1Checked;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(50, 20));
        }
        
        /// <summary>
        /// Muestra el mensaje de error de que no hay proyectos.
        /// </summary>
        public void AsercionErrorNoProyecto()
        {
            #region Variable Declarations
            HtmlCell uINohayproyectosparapuCell = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument2.UIItemTable.UINohayproyectosparapuCell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'No hay proyectos para publicar' celda es igual a 'No hay proyectos para publicar'
            Assert.AreEqual(this.AsercionErrorNoProyectoExpectedValues.UINohayproyectosparapuCellInnerText, uINohayproyectosparapuCell.InnerText, "No emite el mensaje de error");
        }
        
        /// <summary>
        /// Seleccionamos un proyecto para publicar y damos a Save.
        /// </summary>
        public void SeleccionarProyecto()
        {
            #region Variable Declarations
            HtmlCheckBox uIIdsToAddCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIIdsToAddCheckBox;
            HtmlButton uISaveButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UISaveButton;
            #endregion

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.SeleccionarProyectoParams.UIIdsToAddCheckBoxChecked;

            // Clic 'Save' botón
            Mouse.Click(uISaveButton, new Point(28, 26));
        }
        
        /// <summary>
        /// Comprobamos que hemos accedido al CREATE
        /// </summary>
        public void AsercionBotonCreate()
        {
            #region Variable Declarations
            HtmlInputButton uICreateButton = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UICreateButton;
            #endregion

            // Compruebe que la propiedad 'DisplayText' de 'Create' botón es igual a 'Create'
            Assert.AreEqual(this.AsercionBotonCreateExpectedValues.UICreateButtonDisplayText, uICreateButton.DisplayText, "No aparece el boton create");
        }
        
        /// <summary>
        /// Establecemos el estado en "Rechazada" y establecemos un Rating de "B". Además añadimos el campo interes (20) y plazo (10)
        /// </summary>
        public void EstadoRechazadoRatingB()
        {
            #region Variable Declarations
            HtmlComboBox uISolicitudes0estadosComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0estadosComboBox;
            HtmlComboBox uISolicitudes0ratingComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0ratingComboBox;
            HtmlEdit uISolicitudes0interesEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0interesEdit;
            HtmlEdit uISolicitudes0plazoEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0plazoEdit;
            HtmlInputButton uICreateButton = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UICreateButton;
            #endregion

            // Seleccionar 'Rechazada' en cuadro combinado 'Solicitudes[0].estados'
            uISolicitudes0estadosComboBox.SelectedItem = this.EstadoRechazadoRatingBParams.UISolicitudes0estadosComboBoxSelectedItem;

            // Seleccionar 'B' en cuadro combinado 'Solicitudes[0].rating'
            uISolicitudes0ratingComboBox.SelectedItem = this.EstadoRechazadoRatingBParams.UISolicitudes0ratingComboBoxSelectedItem;

            // Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
            uISolicitudes0interesEdit.Text = this.EstadoRechazadoRatingBParams.UISolicitudes0interesEditText;

            // Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
            uISolicitudes0plazoEdit.Text = this.EstadoRechazadoRatingBParams.UISolicitudes0plazoEditText;

            // Clic 'Create' botón
            Mouse.Click(uICreateButton, new Point(54, 28));
        }
        
        /// <summary>
        /// Comprobar que emite el mensaje de error al seleccionar un estado Rechazado y un rating distinto a F.
        /// </summary>
        public void AsercionErrorCreate()
        {
            #region Variable Declarations
            HtmlCustom uILasolicituddeSTOYKEnCustom = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument1.UILasolicituddeSTOYKEnCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'La solicitud de STOYKE, no puede estar a' control personalizado es igual a 'La solicitud de STOYKE, no puede estar aprobada y tener una calificacion de F o viceversa'
            Assert.AreEqual(this.AsercionErrorCreateExpectedValues.UILasolicituddeSTOYKEnCustomInnerText, uILasolicituddeSTOYKEnCustom.InnerText, "No aparece el mensaje de error correspondiente.");
        }
        
        /// <summary>
        /// Seleccionamos Estado "Rechazado" y Rating "A", pero no seleccionamos ningún interés y ningún plazo.
        /// </summary>
        public void EstadoAceptadoRatingA()
        {
            #region Variable Declarations
            HtmlComboBox uISolicitudes0estadosComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0estadosComboBox;
            HtmlComboBox uISolicitudes0ratingComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0ratingComboBox;
            HtmlInputButton uICreateButton = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UICreateButton;
            #endregion

            // Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
            uISolicitudes0estadosComboBox.SelectedItem = this.EstadoAceptadoRatingAParams.UISolicitudes0estadosComboBoxSelectedItem;

            // Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
            uISolicitudes0ratingComboBox.SelectedItem = this.EstadoAceptadoRatingAParams.UISolicitudes0ratingComboBoxSelectedItem;

            // Clic 'Create' botón
            Mouse.Click(uICreateButton, new Point(34, 30));
        }
        
        /// <summary>
        /// Comprobamos que muestra el mensaje de error correspondiente.
        /// </summary>
        public void AsercionErrorInteresPlazo()
        {
            #region Variable Declarations
            HtmlCustom uINosehaintroducidocorCustom = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument1.UINosehaintroducidocorCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'No se ha introducido correctamente el pl' control personalizado es igual a 'No se ha introducido correctamente el plazo o el interes del proyecto STOYKE'
            Assert.AreEqual(this.AsercionErrorInteresPlazoExpectedValues.UINosehaintroducidocorCustomInnerText, uINosehaintroducidocorCustom.InnerText, "No aparece el mensaje de error correspondiente.");
        }
        
        /// <summary>
        /// Se creado la solicitud con éxito.
        /// </summary>
        public void CreateCorrecto()
        {
            #region Variable Declarations
            HtmlComboBox uISolicitudes0estadosComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0estadosComboBox;
            HtmlComboBox uISolicitudes0ratingComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0ratingComboBox;
            HtmlEdit uISolicitudes0interesEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0interesEdit;
            HtmlEdit uISolicitudes0plazoEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UISolicitudes0plazoEdit;
            HtmlInputButton uICreateButton = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument.UICreateButton;
            #endregion

            // Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
            uISolicitudes0estadosComboBox.SelectedItem = this.CreateCorrectoParams.UISolicitudes0estadosComboBoxSelectedItem;

            // Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
            uISolicitudes0ratingComboBox.SelectedItem = this.CreateCorrectoParams.UISolicitudes0ratingComboBoxSelectedItem;

            // Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
            uISolicitudes0interesEdit.Text = this.CreateCorrectoParams.UISolicitudes0interesEditText;

            // Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
            uISolicitudes0plazoEdit.Text = this.CreateCorrectoParams.UISolicitudes0plazoEditText;

            // Clic 'Create' botón
            Mouse.Click(uICreateButton, new Point(45, 13));
        }
        
        /// <summary>
        /// Comprobación de que se ha creado la solicitud correctamente.
        /// </summary>
        public void AsercionDetails()
        {
            #region Variable Declarations
            HtmlDiv uISolicitudNombreEstadPane = this.UISeleccionelosproyectWindow.UIDetailsStartGrowDocument.UISolicitudNombreEstadPane;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
            //
            //
            //
            //Nombre 
            //
            //Estado Solicitud 
            //
            //Rating 
            //
            //Interés 
            //
            //Plazo de Amortización 
            //
            //
            //STOYKE Aceptada A 2 10 '
            Assert.AreEqual(this.AsercionDetailsExpectedValues.UISolicitudNombreEstadPaneInnerText, uISolicitudNombreEstadPane.InnerText, "No se ha creado la solicitud");
        }
        
        /// <summary>
        /// Comprueba que devuelve todos los proyectos sin filtrar
        /// </summary>
        public void AsercionProyectosSinFiltrar()
        {
            #region Variable Declarations
            HtmlDiv uIAreaspositionabsolutPane = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIAreaspositionabsolutPane;
            #endregion

            // Compruebe que la propiedad 'InnerText' de '.areas { position: absolute; top: 150px;' panel es igual a '.areas { position: absolute; top: 150px; left: 100px; } .areas2 { position: absolute; top: 170px; left: 100px; } .rating { position: absolute; top: 580px; left: 100px; } .rating2 { position: absolute; top: 600px; left: 100px; } .tiposInversiones { position: absolute; top: 680px; left: 100px; } .tiposInversiones2 { position: absolute; top: 700px; left: 100px; } .InvMinima { position: absolute; top: 740px; left: 100px; } .InvMinima2 { position: absolute; top: 760px; left: 100px; } .interes { position: absolute; top: 960px; left: 100px; } .interes2 { position: absolute; top: 980px; left: 100px; } .plazo { position: absolute; top: 1060px; left: 100px; } .plazo2 { position: absolute; top: 1080px; left: 100px; } .botonFiltro { position: absolute; float: right; top: 800px; left: 100px; } .botonSave { position: absolute; float: right; top: 1060px; left: 100px; } table.GeneratedTable { left: 1000px; background-color: white; text-align: left; border-collapse: collapse; width: 100%; } table.GeneratedTable th, td { padding: 20px; } table.GeneratedTable thead { background-color: #246355; border-bottom: solid 5px #0F362D; color: white; } table.GeneratedTable tr:nth-child(even) { background-color: #ddd; } table.GeneratedTable tr:hover td { background-color: #369681; color: white; }  
            //Publicar Proyectos
            //
            //
            //
            //
            //Nombre del proyecto   
            //
            //areas 
            //
            // Salud 
            // Pinturas 
            // Drogería 
            // Tecnología 
            // Construcción 
            // Transporte 
            // TIC 
            // Ingeniería 
            // Hogar 
            // Alimentación 
            // Textil 
            // Comercio 
            // Hostelería 
            // Administración 
            // Automóviles 
            // Reparaciones 
            // Banca 
            // Maquinaria 
            //
            //Tipos 
            //
            // Crownfunding 
            // Business Angels 
            // Venture Capital 
            //
            //Fecha de Expiracion  Capital  
            // 
            //
            //
            //
            //
            //
            //Nombre del proyecto 
            //
            //Fecha de Expiración 
            //
            //Área temática 
            //
            //Tipo de inversión 
            //
            //Capital 
            //
            //Seleccionar 
            //
            //
            //STOYKE 09/02/2019 Automóviles 
            // Banca 
            //Crownfunding 
            //64000  
            //MYRED 09/02/2019 Administración 
            //Business Angels 
            // Venture Capital 
            //456000  
            //JUST NOW 09/02/2019 Salud 
            // Maquinaria 
            // Alimentación 
            //Venture Capital 
            // Crownfunding 
            //56000  
            //Save Cancel 
            //
            //
            //© 2018 - StartGrow'
            Assert.AreEqual(this.AsercionProyectosSinFiltrarExpectedValues.UIAreaspositionabsolutPaneInnerText, uIAreaspositionabsolutPane.InnerText, "No muestra todos los proyectos");
        }
        
        /// <summary>
        /// Comprueba que devuelve los proyectos filtrados.
        /// </summary>
        public void AsercionProyectosFiltrados1()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument3.UIItemCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de control personalizado es igual a '
            //Nombre del proyecto 
            //
            //Fecha de Expiración 
            //
            //Área temática 
            //
            //Tipo de inversión 
            //
            //Capital 
            //
            //Seleccionar 
            //
            //
            //STOYKE 09/02/2019 Automóviles 
            // Banca 
            //Crownfunding 
            //64000  
            //Save Cancel '
            Assert.AreEqual(this.AsercionProyectosFiltrados1ExpectedValues.UIItemCustomInnerText, uIItemCustom.InnerText, "No filtra correctamente.");
        }
        
        /// <summary>
        /// Comprueba que devuelve el mensaje correspondiente cuando no hay proyectos para publicar.
        /// </summary>
        public void AsercionNoHayProyectos()
        {
            #region Variable Declarations
            HtmlCell uINohayproyectosparapuCell = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIItemTable.UINohayproyectosparapuCell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'No hay proyectos para publicar' celda es igual a 'No hay proyectos para publicar'
            Assert.AreEqual(this.AsercionNoHayProyectosExpectedValues.UINohayproyectosparapuCellInnerText, uINohayproyectosparapuCell.InnerText, "No aparece el mensaje correspondiente.");
        }
        
        /// <summary>
        /// Filtramos los proyectos (STROYKE)
        /// </summary>
        public void FiltrarProyectos3()
        {
            #region Variable Declarations
            HtmlCheckBox uIAreasSeleccionadaCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIAreasSeleccionadaCheckBox;
            HtmlCheckBox uITipoSeleccionadoCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UITipoSeleccionadoCheckBox;
            HtmlEdit uIFechadeExpiracionEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIFechadeExpiracionEdit;
            HtmlEdit uICapitalEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UICapitalEdit;
            HtmlEdit uINombredelproyectoEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UINombredelproyectoEdit;
            HtmlInputButton uIFiltrarButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument.UIFiltrarButton;
            #endregion

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox.Checked = this.FiltrarProyectos3Params.UIAreasSeleccionadaCheckBoxChecked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox.Checked = this.FiltrarProyectos3Params.UITipoSeleccionadoCheckBoxChecked;

            // Escribir '2019-02-09' en cuadro de texto 'Fecha de Expiracion'
            uIFechadeExpiracionEdit.Text = this.FiltrarProyectos3Params.UIFechadeExpiracionEditText;

            // Escribir '64000' en cuadro de texto 'Capital'
            uICapitalEdit.Text = this.FiltrarProyectos3Params.UICapitalEditText;

            // Escribir 'STOYKE' en cuadro de texto 'Nombre del proyecto'
            uINombredelproyectoEdit.Text = this.FiltrarProyectos3Params.UINombredelproyectoEditText;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(36, 20));
        }
        
        /// <summary>
        /// Metodo de Acceso a la aplicacion
        /// </summary>
        public void AccediendoAplicacion()
        {
            #region Variable Declarations
            HtmlHyperlink uIPublicarProyectoHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIPublicarProyectoHyperlink;
            #endregion

            // Ir a página web 'https://localhost:44358/' mediante nueva instancia de explorador
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.AccediendoAplicacionParams.UIGoogleInternetExplorWindowUrl));

            // Clic 'Publicar Proyecto' vínculo
            Mouse.Click(uIPublicarProyectoHyperlink, new Point(81, 29));
        }
        
        /// <summary>
        /// AssertBotonLogin: use 'AssertBotonLoginExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertBotonLogin()
        {
            #region Variable Declarations
            HtmlButton uILoginButton = this.UILoginStartGrowInternWindow1.UILoginStartGrowDocument.UILoginButton;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Log in' botón es igual a 'Log in'
            Assert.AreEqual(this.AssertBotonLoginExpectedValues.UILoginButtonInnerText, uILoginButton.InnerText);
        }
        
        /// <summary>
        /// Acceso: use 'AccesoParams' para pasar parámetros a este método.
        /// </summary>
        public void Acceso()
        {
            #region Variable Declarations
            BrowserWindow uIGoogleInternetExplorWindow = this.UIGoogleInternetExplorWindow;
            #endregion

            // Ir a página web 'https://www.google.es/?gws_rd=ssl' mediante nueva instancia de explorador
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.AccesoParams.UIGoogleInternetExplorWindowUrl));

            // Ir a página web 'https://localhost:44358/'
            uIGoogleInternetExplorWindow.NavigateToUrl(new System.Uri(this.AccesoParams.UIGoogleInternetExplorWindowUrl1));
        }
        
        /// <summary>
        /// AccesoAplicacion: use 'AccesoAplicacionParams' para pasar parámetros a este método.
        /// </summary>
        public void AccesoAplicacion()
        {
            #region Variable Declarations
            HtmlHyperlink uIPublicarProyectoHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIPublicarProyectoHyperlink;
            #endregion

            // Ir a página web 'https://localhost:44358/' mediante nueva instancia de explorador
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.AccesoAplicacionParams.UIGoogleInternetExplorWindowUrl));

            // Clic 'Publicar Proyecto' vínculo
            Mouse.Click(uIPublicarProyectoHyperlink, new Point(74, 22));
        }
        
        /// <summary>
        /// SeleccionarProyectoMYRED: use 'SeleccionarProyectoMYREDParams' para pasar parámetros a este método.
        /// </summary>
        public void SeleccionarProyectoMYRED()
        {
            #region Variable Declarations
            HtmlCheckBox uIIdsToAddCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIIdsToAddCheckBox;
            HtmlButton uISaveButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UISaveButton;
            #endregion

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.SeleccionarProyectoMYREDParams.UIIdsToAddCheckBoxChecked;

            // Clic 'Save' botón
            Mouse.Click(uISaveButton, new Point(18, 29));
        }
        
        /// <summary>
        /// AssertDetailsMYRED: use 'AssertDetailsMYREDExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertDetailsMYRED()
        {
            #region Variable Declarations
            HtmlDiv uISolicitudNombreEstadPane = this.UISeleccionelosproyectWindow.UIDetailsStartGrowDocument1.UISolicitudNombreEstadPane;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
            //
            //
            //
            //Nombre 
            //
            //Estado Solicitud 
            //
            //Rating 
            //
            //Interés 
            //
            //Plazo de Amortización 
            //
            //
            //MYRED Aceptada A 2 10 '
            Assert.AreEqual(this.AssertDetailsMYREDExpectedValues.UISolicitudNombreEstadPaneInnerText, uISolicitudNombreEstadPane.InnerText);
        }
        
        /// <summary>
        /// FiltrarProyectosJUSTNOW: use 'FiltrarProyectosJUSTNOWParams' para pasar parámetros a este método.
        /// </summary>
        public void FiltrarProyectosJUSTNOW()
        {
            #region Variable Declarations
            HtmlCheckBox uIAreasSeleccionadaCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIAreasSeleccionadaCheckBox;
            HtmlCheckBox uIAreasSeleccionadaCheckBox1 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIAreasSeleccionadaCheckBox1;
            HtmlCheckBox uIAreasSeleccionadaCheckBox2 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIAreasSeleccionadaCheckBox2;
            HtmlCheckBox uITipoSeleccionadoCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UITipoSeleccionadoCheckBox;
            HtmlCheckBox uITipoSeleccionadoCheckBox1 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UITipoSeleccionadoCheckBox1;
            HtmlEdit uIFechadeExpiracionEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIFechadeExpiracionEdit;
            HtmlEdit uICapitalEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UICapitalEdit;
            HtmlEdit uINombredelproyectoEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UINombredelproyectoEdit;
            HtmlInputButton uIFiltrarButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIFiltrarButton;
            #endregion

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox.Checked = this.FiltrarProyectosJUSTNOWParams.UIAreasSeleccionadaCheckBoxChecked;

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox1.Checked = this.FiltrarProyectosJUSTNOWParams.UIAreasSeleccionadaCheckBox1Checked;

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox2.Checked = this.FiltrarProyectosJUSTNOWParams.UIAreasSeleccionadaCheckBox2Checked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox.Checked = this.FiltrarProyectosJUSTNOWParams.UITipoSeleccionadoCheckBoxChecked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox1.Checked = this.FiltrarProyectosJUSTNOWParams.UITipoSeleccionadoCheckBox1Checked;

            // Escribir '2019-2-9' en cuadro de texto 'Fecha de Expiracion'
            uIFechadeExpiracionEdit.Text = this.FiltrarProyectosJUSTNOWParams.UIFechadeExpiracionEditText;

            // Escribir '56000' en cuadro de texto 'Capital'
            uICapitalEdit.Text = this.FiltrarProyectosJUSTNOWParams.UICapitalEditText;

            // Escribir 'JUST NOW' en cuadro de texto 'Nombre del proyecto'
            uINombredelproyectoEdit.Text = this.FiltrarProyectosJUSTNOWParams.UINombredelproyectoEditText;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(43, 13));
        }
        
        /// <summary>
        /// SeleccionarProyectoJUSTNOW: use 'SeleccionarProyectoJUSTNOWParams' para pasar parámetros a este método.
        /// </summary>
        public void SeleccionarProyectoJUSTNOW()
        {
            #region Variable Declarations
            HtmlCheckBox uIIdsToAddCheckBox1 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIIdsToAddCheckBox1;
            HtmlButton uISaveButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UISaveButton;
            #endregion

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox1.Checked = this.SeleccionarProyectoJUSTNOWParams.UIIdsToAddCheckBox1Checked;

            // Clic 'Save' botón
            Mouse.Click(uISaveButton, new Point(26, 23));
        }
        
        /// <summary>
        /// AsercionErrorCreateJUSTNOW: use 'AsercionErrorCreateJUSTNOWExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionErrorCreateJUSTNOW()
        {
            #region Variable Declarations
            HtmlCustom uILasolicituddeJUSTNOWCustom = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument2.UILasolicituddeJUSTNOWCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'La solicitud de JUST NOW, no puede estar' control personalizado es igual a 'La solicitud de JUST NOW, no puede estar aprobada y tener una calificacion de F o viceversa'
            Assert.AreEqual(this.AsercionErrorCreateJUSTNOWExpectedValues.UILasolicituddeJUSTNOWCustomInnerText, uILasolicituddeJUSTNOWCustom.InnerText);
        }
        
        /// <summary>
        /// AsercionErrorInteresPlazoJUSTNOW: use 'AsercionErrorInteresPlazoJUSTNOWExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionErrorInteresPlazoJUSTNOW()
        {
            #region Variable Declarations
            HtmlCustom uINosehaintroducidocorCustom = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument2.UINosehaintroducidocorCustom;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'No se ha introducido correctamente el pl' control personalizado es igual a 'No se ha introducido correctamente el plazo o el interes del proyecto JUST NOW'
            Assert.AreEqual(this.AsercionErrorInteresPlazoJUSTNOWExpectedValues.UINosehaintroducidocorCustomInnerText, uINosehaintroducidocorCustom.InnerText);
        }
        
        /// <summary>
        /// CreateCorrectoJUSTNOW: use 'CreateCorrectoJUSTNOWParams' para pasar parámetros a este método.
        /// </summary>
        public void CreateCorrectoJUSTNOW()
        {
            #region Variable Declarations
            HtmlComboBox uISolicitudes0estadosComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument3.UISolicitudes0estadosComboBox;
            HtmlComboBox uISolicitudes0ratingComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument3.UISolicitudes0ratingComboBox;
            HtmlEdit uISolicitudes0interesEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument3.UISolicitudes0interesEdit;
            HtmlEdit uISolicitudes0plazoEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument3.UISolicitudes0plazoEdit;
            HtmlInputButton uICreateButton = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument3.UICreateButton;
            #endregion

            // Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
            uISolicitudes0estadosComboBox.SelectedItem = this.CreateCorrectoJUSTNOWParams.UISolicitudes0estadosComboBoxSelectedItem;

            // Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
            uISolicitudes0ratingComboBox.SelectedItem = this.CreateCorrectoJUSTNOWParams.UISolicitudes0ratingComboBoxSelectedItem;

            // Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
            uISolicitudes0interesEdit.Text = this.CreateCorrectoJUSTNOWParams.UISolicitudes0interesEditText;

            // Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
            uISolicitudes0plazoEdit.Text = this.CreateCorrectoJUSTNOWParams.UISolicitudes0plazoEditText;

            // Clic 'Create' botón
            Mouse.Click(uICreateButton, new Point(37, 21));
        }
        
        /// <summary>
        /// AsercionDetailsJUSTNOW: use 'AsercionDetailsJUSTNOWExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionDetailsJUSTNOW()
        {
            #region Variable Declarations
            HtmlDiv uISolicitudNombreEstadPane = this.UISeleccionelosproyectWindow.UIDetailsStartGrowDocument2.UISolicitudNombreEstadPane;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
            //
            //
            //
            //Nombre 
            //
            //Estado Solicitud 
            //
            //Rating 
            //
            //Interés 
            //
            //Plazo de Amortización 
            //
            //
            //JUST NOW Aceptada A 2 10 '
            Assert.AreEqual(this.AsercionDetailsJUSTNOWExpectedValues.UISolicitudNombreEstadPaneInnerText, uISolicitudNombreEstadPane.InnerText);
        }
        
        /// <summary>
        /// FiltrarProyectosPOCHOLO: use 'FiltrarProyectosPOCHOLOParams' para pasar parámetros a este método.
        /// </summary>
        public void FiltrarProyectosPOCHOLO()
        {
            #region Variable Declarations
            HtmlCheckBox uIAreasSeleccionadaCheckBox3 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIAreasSeleccionadaCheckBox3;
            HtmlCheckBox uITipoSeleccionadoCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UITipoSeleccionadoCheckBox;
            HtmlCheckBox uITipoSeleccionadoCheckBox11 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UITipoSeleccionadoCheckBox11;
            HtmlCheckBox uITipoSeleccionadoCheckBox1 = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UITipoSeleccionadoCheckBox1;
            HtmlEdit uIFechadeExpiracionEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIFechadeExpiracionEdit;
            HtmlEdit uICapitalEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UICapitalEdit;
            HtmlEdit uINombredelproyectoEdit = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UINombredelproyectoEdit;
            HtmlInputButton uIFiltrarButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIFiltrarButton;
            #endregion

            // Seleccionar casilla 'areasSeleccionada'
            uIAreasSeleccionadaCheckBox3.Checked = this.FiltrarProyectosPOCHOLOParams.UIAreasSeleccionadaCheckBox3Checked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox.Checked = this.FiltrarProyectosPOCHOLOParams.UITipoSeleccionadoCheckBoxChecked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox11.Checked = this.FiltrarProyectosPOCHOLOParams.UITipoSeleccionadoCheckBox11Checked;

            // Seleccionar casilla 'tipoSeleccionado'
            uITipoSeleccionadoCheckBox1.Checked = this.FiltrarProyectosPOCHOLOParams.UITipoSeleccionadoCheckBox1Checked;

            // Escribir '2019-02-09' en cuadro de texto 'Fecha de Expiracion'
            uIFechadeExpiracionEdit.Text = this.FiltrarProyectosPOCHOLOParams.UIFechadeExpiracionEditText;

            // Escribir '100000' en cuadro de texto 'Capital'
            uICapitalEdit.Text = this.FiltrarProyectosPOCHOLOParams.UICapitalEditText;

            // Escribir 'POCHOLO RULES' en cuadro de texto 'Nombre del proyecto'
            uINombredelproyectoEdit.Text = this.FiltrarProyectosPOCHOLOParams.UINombredelproyectoEditText;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(43, 21));
        }
        
        /// <summary>
        /// SeleccionarProyectoPOCHOLO: use 'SeleccionarProyectoPOCHOLOParams' para pasar parámetros a este método.
        /// </summary>
        public void SeleccionarProyectoPOCHOLO()
        {
            #region Variable Declarations
            HtmlCheckBox uIIdsToAddCheckBox = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument6.UIIdsToAddCheckBox;
            HtmlButton uISaveButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument6.UISaveButton;
            #endregion

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.SeleccionarProyectoPOCHOLOParams.UIIdsToAddCheckBoxChecked;

            // Clic 'Save' botón
            Mouse.Click(uISaveButton, new Point(35, 24));
        }
        
        /// <summary>
        /// CreateCorrectoPOCHOLO: use 'CreateCorrectoPOCHOLOParams' para pasar parámetros a este método.
        /// </summary>
        public void CreateCorrectoPOCHOLO()
        {
            #region Variable Declarations
            HtmlComboBox uISolicitudes0estadosComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument4.UISolicitudes0estadosComboBox;
            HtmlComboBox uISolicitudes0ratingComboBox = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument4.UISolicitudes0ratingComboBox;
            HtmlEdit uISolicitudes0interesEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument4.UISolicitudes0interesEdit;
            HtmlEdit uISolicitudes0plazoEdit = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument4.UISolicitudes0plazoEdit;
            HtmlInputButton uICreateButton = this.UISeleccionelosproyectWindow.UICreateStartGrowDocument4.UICreateButton;
            #endregion

            // Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
            uISolicitudes0estadosComboBox.SelectedItem = this.CreateCorrectoPOCHOLOParams.UISolicitudes0estadosComboBoxSelectedItem;

            // Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
            uISolicitudes0ratingComboBox.SelectedItem = this.CreateCorrectoPOCHOLOParams.UISolicitudes0ratingComboBoxSelectedItem;

            // Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
            uISolicitudes0interesEdit.Text = this.CreateCorrectoPOCHOLOParams.UISolicitudes0interesEditText;

            // Escribir '{Tab}' en cuadro de texto 'Solicitudes[0].interes'
            Keyboard.SendKeys(uISolicitudes0interesEdit, this.CreateCorrectoPOCHOLOParams.UISolicitudes0interesEditSendKeys, ModifierKeys.None);

            // Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
            uISolicitudes0plazoEdit.Text = this.CreateCorrectoPOCHOLOParams.UISolicitudes0plazoEditText;

            // Clic 'Create' botón
            Mouse.Click(uICreateButton, new Point(46, 19));
        }
        
        /// <summary>
        /// AsercionDetailsPOCHOLO: use 'AsercionDetailsPOCHOLOExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionDetailsPOCHOLO()
        {
            #region Variable Declarations
            HtmlDiv uISolicitudNombreEstadPane = this.UISeleccionelosproyectWindow.UIDetailsStartGrowDocument3.UISolicitudNombreEstadPane;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
            //
            //
            //
            //Nombre 
            //
            //Estado Solicitud 
            //
            //Rating 
            //
            //Interés 
            //
            //Plazo de Amortización 
            //
            //
            //POCHOLO RULES Aceptada A 2 10 '
            Assert.AreEqual(this.AsercionDetailsPOCHOLOExpectedValues.UISolicitudNombreEstadPaneInnerText, uISolicitudNombreEstadPane.InnerText);
        }
        
        /// <summary>
        /// AsercionProyectosFiltradosSTOYKE: use 'AsercionProyectosFiltradosSTOYKEExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionProyectosFiltradosSTOYKE()
        {
            #region Variable Declarations
            HtmlCell uISTOYKECell = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIItemTable.UISTOYKECell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'STOYKE' celda es igual a 'STOYKE '
            Assert.AreEqual(this.AsercionProyectosFiltradosSTOYKEExpectedValues.UISTOYKECellInnerText, uISTOYKECell.InnerText);
        }
        
        /// <summary>
        /// AsercionProyectosFiltradosJUSTNOW: use 'AsercionProyectosFiltradosJUSTNOWExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionProyectosFiltradosJUSTNOW()
        {
            #region Variable Declarations
            HtmlCell uIJUSTNOWCell = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIItemTable.UIJUSTNOWCell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'JUST NOW' celda es igual a 'JUST NOW '
            Assert.AreEqual(this.AsercionProyectosFiltradosJUSTNOWExpectedValues.UIJUSTNOWCellInnerText, uIJUSTNOWCell.InnerText);
        }
        
        /// <summary>
        /// AsercionProyectosFiltradosPOCHOLO: use 'AsercionProyectosFiltradosPOCHOLOExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AsercionProyectosFiltradosPOCHOLO()
        {
            #region Variable Declarations
            HtmlCell uIPOCHOLORULESCell = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UIItemTable.UIPOCHOLORULESCell;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'POCHOLO RULES' celda es igual a 'POCHOLO RULES '
            Assert.AreEqual(this.AsercionProyectosFiltradosPOCHOLOExpectedValues.UIPOCHOLORULESCellInnerText, uIPOCHOLORULESCell.InnerText);
        }
        
        /// <summary>
        /// CerrarSesion
        /// </summary>
        public void CerrarSesion()
        {
            #region Variable Declarations
            HtmlButton uILogoutButton = this.UISeleccionelosproyectWindow.UISeleccionelosproyectDocument4.UILogoutFormCustom.UILogoutButton;
            #endregion

            // Clic 'Log out' botón
            Mouse.Click(uILogoutButton, new Point(10, 10));
        }
        
        #region Properties
        public virtual AccederAppParams AccederAppParams
        {
            get
            {
                if ((this.mAccederAppParams == null))
                {
                    this.mAccederAppParams = new AccederAppParams();
                }
                return this.mAccederAppParams;
            }
        }
        
        public virtual AsercionBotonLoginExpectedValues AsercionBotonLoginExpectedValues
        {
            get
            {
                if ((this.mAsercionBotonLoginExpectedValues == null))
                {
                    this.mAsercionBotonLoginExpectedValues = new AsercionBotonLoginExpectedValues();
                }
                return this.mAsercionBotonLoginExpectedValues;
            }
        }
        
        public virtual LoginEnAppParams LoginEnAppParams
        {
            get
            {
                if ((this.mLoginEnAppParams == null))
                {
                    this.mLoginEnAppParams = new LoginEnAppParams();
                }
                return this.mLoginEnAppParams;
            }
        }
        
        public virtual AsercionLoginCorrectoExpectedValues AsercionLoginCorrectoExpectedValues
        {
            get
            {
                if ((this.mAsercionLoginCorrectoExpectedValues == null))
                {
                    this.mAsercionLoginCorrectoExpectedValues = new AsercionLoginCorrectoExpectedValues();
                }
                return this.mAsercionLoginCorrectoExpectedValues;
            }
        }
        
        public virtual AsercionNombreProyectoExpectedValues AsercionNombreProyectoExpectedValues
        {
            get
            {
                if ((this.mAsercionNombreProyectoExpectedValues == null))
                {
                    this.mAsercionNombreProyectoExpectedValues = new AsercionNombreProyectoExpectedValues();
                }
                return this.mAsercionNombreProyectoExpectedValues;
            }
        }
        
        public virtual FiltrarProyectosParams FiltrarProyectosParams
        {
            get
            {
                if ((this.mFiltrarProyectosParams == null))
                {
                    this.mFiltrarProyectosParams = new FiltrarProyectosParams();
                }
                return this.mFiltrarProyectosParams;
            }
        }
        
        public virtual AsercionTipoInversionExpectedValues AsercionTipoInversionExpectedValues
        {
            get
            {
                if ((this.mAsercionTipoInversionExpectedValues == null))
                {
                    this.mAsercionTipoInversionExpectedValues = new AsercionTipoInversionExpectedValues();
                }
                return this.mAsercionTipoInversionExpectedValues;
            }
        }
        
        public virtual FiltrarProyectos2Params FiltrarProyectos2Params
        {
            get
            {
                if ((this.mFiltrarProyectos2Params == null))
                {
                    this.mFiltrarProyectos2Params = new FiltrarProyectos2Params();
                }
                return this.mFiltrarProyectos2Params;
            }
        }
        
        public virtual AsercionErrorNoProyectoExpectedValues AsercionErrorNoProyectoExpectedValues
        {
            get
            {
                if ((this.mAsercionErrorNoProyectoExpectedValues == null))
                {
                    this.mAsercionErrorNoProyectoExpectedValues = new AsercionErrorNoProyectoExpectedValues();
                }
                return this.mAsercionErrorNoProyectoExpectedValues;
            }
        }
        
        public virtual SeleccionarProyectoParams SeleccionarProyectoParams
        {
            get
            {
                if ((this.mSeleccionarProyectoParams == null))
                {
                    this.mSeleccionarProyectoParams = new SeleccionarProyectoParams();
                }
                return this.mSeleccionarProyectoParams;
            }
        }
        
        public virtual AsercionBotonCreateExpectedValues AsercionBotonCreateExpectedValues
        {
            get
            {
                if ((this.mAsercionBotonCreateExpectedValues == null))
                {
                    this.mAsercionBotonCreateExpectedValues = new AsercionBotonCreateExpectedValues();
                }
                return this.mAsercionBotonCreateExpectedValues;
            }
        }
        
        public virtual EstadoRechazadoRatingBParams EstadoRechazadoRatingBParams
        {
            get
            {
                if ((this.mEstadoRechazadoRatingBParams == null))
                {
                    this.mEstadoRechazadoRatingBParams = new EstadoRechazadoRatingBParams();
                }
                return this.mEstadoRechazadoRatingBParams;
            }
        }
        
        public virtual AsercionErrorCreateExpectedValues AsercionErrorCreateExpectedValues
        {
            get
            {
                if ((this.mAsercionErrorCreateExpectedValues == null))
                {
                    this.mAsercionErrorCreateExpectedValues = new AsercionErrorCreateExpectedValues();
                }
                return this.mAsercionErrorCreateExpectedValues;
            }
        }
        
        public virtual EstadoAceptadoRatingAParams EstadoAceptadoRatingAParams
        {
            get
            {
                if ((this.mEstadoAceptadoRatingAParams == null))
                {
                    this.mEstadoAceptadoRatingAParams = new EstadoAceptadoRatingAParams();
                }
                return this.mEstadoAceptadoRatingAParams;
            }
        }
        
        public virtual AsercionErrorInteresPlazoExpectedValues AsercionErrorInteresPlazoExpectedValues
        {
            get
            {
                if ((this.mAsercionErrorInteresPlazoExpectedValues == null))
                {
                    this.mAsercionErrorInteresPlazoExpectedValues = new AsercionErrorInteresPlazoExpectedValues();
                }
                return this.mAsercionErrorInteresPlazoExpectedValues;
            }
        }
        
        public virtual CreateCorrectoParams CreateCorrectoParams
        {
            get
            {
                if ((this.mCreateCorrectoParams == null))
                {
                    this.mCreateCorrectoParams = new CreateCorrectoParams();
                }
                return this.mCreateCorrectoParams;
            }
        }
        
        public virtual AsercionDetailsExpectedValues AsercionDetailsExpectedValues
        {
            get
            {
                if ((this.mAsercionDetailsExpectedValues == null))
                {
                    this.mAsercionDetailsExpectedValues = new AsercionDetailsExpectedValues();
                }
                return this.mAsercionDetailsExpectedValues;
            }
        }
        
        public virtual AsercionProyectosSinFiltrarExpectedValues AsercionProyectosSinFiltrarExpectedValues
        {
            get
            {
                if ((this.mAsercionProyectosSinFiltrarExpectedValues == null))
                {
                    this.mAsercionProyectosSinFiltrarExpectedValues = new AsercionProyectosSinFiltrarExpectedValues();
                }
                return this.mAsercionProyectosSinFiltrarExpectedValues;
            }
        }
        
        public virtual AsercionProyectosFiltrados1ExpectedValues AsercionProyectosFiltrados1ExpectedValues
        {
            get
            {
                if ((this.mAsercionProyectosFiltrados1ExpectedValues == null))
                {
                    this.mAsercionProyectosFiltrados1ExpectedValues = new AsercionProyectosFiltrados1ExpectedValues();
                }
                return this.mAsercionProyectosFiltrados1ExpectedValues;
            }
        }
        
        public virtual AsercionNoHayProyectosExpectedValues AsercionNoHayProyectosExpectedValues
        {
            get
            {
                if ((this.mAsercionNoHayProyectosExpectedValues == null))
                {
                    this.mAsercionNoHayProyectosExpectedValues = new AsercionNoHayProyectosExpectedValues();
                }
                return this.mAsercionNoHayProyectosExpectedValues;
            }
        }
        
        public virtual FiltrarProyectos3Params FiltrarProyectos3Params
        {
            get
            {
                if ((this.mFiltrarProyectos3Params == null))
                {
                    this.mFiltrarProyectos3Params = new FiltrarProyectos3Params();
                }
                return this.mFiltrarProyectos3Params;
            }
        }
        
        public virtual AccediendoAplicacionParams AccediendoAplicacionParams
        {
            get
            {
                if ((this.mAccediendoAplicacionParams == null))
                {
                    this.mAccediendoAplicacionParams = new AccediendoAplicacionParams();
                }
                return this.mAccediendoAplicacionParams;
            }
        }
        
        public virtual AssertBotonLoginExpectedValues AssertBotonLoginExpectedValues
        {
            get
            {
                if ((this.mAssertBotonLoginExpectedValues == null))
                {
                    this.mAssertBotonLoginExpectedValues = new AssertBotonLoginExpectedValues();
                }
                return this.mAssertBotonLoginExpectedValues;
            }
        }
        
        public virtual AccesoParams AccesoParams
        {
            get
            {
                if ((this.mAccesoParams == null))
                {
                    this.mAccesoParams = new AccesoParams();
                }
                return this.mAccesoParams;
            }
        }
        
        public virtual AccesoAplicacionParams AccesoAplicacionParams
        {
            get
            {
                if ((this.mAccesoAplicacionParams == null))
                {
                    this.mAccesoAplicacionParams = new AccesoAplicacionParams();
                }
                return this.mAccesoAplicacionParams;
            }
        }
        
        public virtual SeleccionarProyectoMYREDParams SeleccionarProyectoMYREDParams
        {
            get
            {
                if ((this.mSeleccionarProyectoMYREDParams == null))
                {
                    this.mSeleccionarProyectoMYREDParams = new SeleccionarProyectoMYREDParams();
                }
                return this.mSeleccionarProyectoMYREDParams;
            }
        }
        
        public virtual AssertDetailsMYREDExpectedValues AssertDetailsMYREDExpectedValues
        {
            get
            {
                if ((this.mAssertDetailsMYREDExpectedValues == null))
                {
                    this.mAssertDetailsMYREDExpectedValues = new AssertDetailsMYREDExpectedValues();
                }
                return this.mAssertDetailsMYREDExpectedValues;
            }
        }
        
        public virtual FiltrarProyectosJUSTNOWParams FiltrarProyectosJUSTNOWParams
        {
            get
            {
                if ((this.mFiltrarProyectosJUSTNOWParams == null))
                {
                    this.mFiltrarProyectosJUSTNOWParams = new FiltrarProyectosJUSTNOWParams();
                }
                return this.mFiltrarProyectosJUSTNOWParams;
            }
        }
        
        public virtual SeleccionarProyectoJUSTNOWParams SeleccionarProyectoJUSTNOWParams
        {
            get
            {
                if ((this.mSeleccionarProyectoJUSTNOWParams == null))
                {
                    this.mSeleccionarProyectoJUSTNOWParams = new SeleccionarProyectoJUSTNOWParams();
                }
                return this.mSeleccionarProyectoJUSTNOWParams;
            }
        }
        
        public virtual AsercionErrorCreateJUSTNOWExpectedValues AsercionErrorCreateJUSTNOWExpectedValues
        {
            get
            {
                if ((this.mAsercionErrorCreateJUSTNOWExpectedValues == null))
                {
                    this.mAsercionErrorCreateJUSTNOWExpectedValues = new AsercionErrorCreateJUSTNOWExpectedValues();
                }
                return this.mAsercionErrorCreateJUSTNOWExpectedValues;
            }
        }
        
        public virtual AsercionErrorInteresPlazoJUSTNOWExpectedValues AsercionErrorInteresPlazoJUSTNOWExpectedValues
        {
            get
            {
                if ((this.mAsercionErrorInteresPlazoJUSTNOWExpectedValues == null))
                {
                    this.mAsercionErrorInteresPlazoJUSTNOWExpectedValues = new AsercionErrorInteresPlazoJUSTNOWExpectedValues();
                }
                return this.mAsercionErrorInteresPlazoJUSTNOWExpectedValues;
            }
        }
        
        public virtual CreateCorrectoJUSTNOWParams CreateCorrectoJUSTNOWParams
        {
            get
            {
                if ((this.mCreateCorrectoJUSTNOWParams == null))
                {
                    this.mCreateCorrectoJUSTNOWParams = new CreateCorrectoJUSTNOWParams();
                }
                return this.mCreateCorrectoJUSTNOWParams;
            }
        }
        
        public virtual AsercionDetailsJUSTNOWExpectedValues AsercionDetailsJUSTNOWExpectedValues
        {
            get
            {
                if ((this.mAsercionDetailsJUSTNOWExpectedValues == null))
                {
                    this.mAsercionDetailsJUSTNOWExpectedValues = new AsercionDetailsJUSTNOWExpectedValues();
                }
                return this.mAsercionDetailsJUSTNOWExpectedValues;
            }
        }
        
        public virtual FiltrarProyectosPOCHOLOParams FiltrarProyectosPOCHOLOParams
        {
            get
            {
                if ((this.mFiltrarProyectosPOCHOLOParams == null))
                {
                    this.mFiltrarProyectosPOCHOLOParams = new FiltrarProyectosPOCHOLOParams();
                }
                return this.mFiltrarProyectosPOCHOLOParams;
            }
        }
        
        public virtual SeleccionarProyectoPOCHOLOParams SeleccionarProyectoPOCHOLOParams
        {
            get
            {
                if ((this.mSeleccionarProyectoPOCHOLOParams == null))
                {
                    this.mSeleccionarProyectoPOCHOLOParams = new SeleccionarProyectoPOCHOLOParams();
                }
                return this.mSeleccionarProyectoPOCHOLOParams;
            }
        }
        
        public virtual CreateCorrectoPOCHOLOParams CreateCorrectoPOCHOLOParams
        {
            get
            {
                if ((this.mCreateCorrectoPOCHOLOParams == null))
                {
                    this.mCreateCorrectoPOCHOLOParams = new CreateCorrectoPOCHOLOParams();
                }
                return this.mCreateCorrectoPOCHOLOParams;
            }
        }
        
        public virtual AsercionDetailsPOCHOLOExpectedValues AsercionDetailsPOCHOLOExpectedValues
        {
            get
            {
                if ((this.mAsercionDetailsPOCHOLOExpectedValues == null))
                {
                    this.mAsercionDetailsPOCHOLOExpectedValues = new AsercionDetailsPOCHOLOExpectedValues();
                }
                return this.mAsercionDetailsPOCHOLOExpectedValues;
            }
        }
        
        public virtual AsercionProyectosFiltradosSTOYKEExpectedValues AsercionProyectosFiltradosSTOYKEExpectedValues
        {
            get
            {
                if ((this.mAsercionProyectosFiltradosSTOYKEExpectedValues == null))
                {
                    this.mAsercionProyectosFiltradosSTOYKEExpectedValues = new AsercionProyectosFiltradosSTOYKEExpectedValues();
                }
                return this.mAsercionProyectosFiltradosSTOYKEExpectedValues;
            }
        }
        
        public virtual AsercionProyectosFiltradosJUSTNOWExpectedValues AsercionProyectosFiltradosJUSTNOWExpectedValues
        {
            get
            {
                if ((this.mAsercionProyectosFiltradosJUSTNOWExpectedValues == null))
                {
                    this.mAsercionProyectosFiltradosJUSTNOWExpectedValues = new AsercionProyectosFiltradosJUSTNOWExpectedValues();
                }
                return this.mAsercionProyectosFiltradosJUSTNOWExpectedValues;
            }
        }
        
        public virtual AsercionProyectosFiltradosPOCHOLOExpectedValues AsercionProyectosFiltradosPOCHOLOExpectedValues
        {
            get
            {
                if ((this.mAsercionProyectosFiltradosPOCHOLOExpectedValues == null))
                {
                    this.mAsercionProyectosFiltradosPOCHOLOExpectedValues = new AsercionProyectosFiltradosPOCHOLOExpectedValues();
                }
                return this.mAsercionProyectosFiltradosPOCHOLOExpectedValues;
            }
        }
        
        public UILoginStartGrowInternWindow UILoginStartGrowInternWindow
        {
            get
            {
                if ((this.mUILoginStartGrowInternWindow == null))
                {
                    this.mUILoginStartGrowInternWindow = new UILoginStartGrowInternWindow();
                }
                return this.mUILoginStartGrowInternWindow;
            }
        }
        
        public UISeleccionelosproyectWindow UISeleccionelosproyectWindow
        {
            get
            {
                if ((this.mUISeleccionelosproyectWindow == null))
                {
                    this.mUISeleccionelosproyectWindow = new UISeleccionelosproyectWindow();
                }
                return this.mUISeleccionelosproyectWindow;
            }
        }
        
        public UIGoogleInternetExplorWindow UIGoogleInternetExplorWindow
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow == null))
                {
                    this.mUIGoogleInternetExplorWindow = new UIGoogleInternetExplorWindow();
                }
                return this.mUIGoogleInternetExplorWindow;
            }
        }
        
        public UILoginStartGrowInternWindow1 UILoginStartGrowInternWindow1
        {
            get
            {
                if ((this.mUILoginStartGrowInternWindow1 == null))
                {
                    this.mUILoginStartGrowInternWindow1 = new UILoginStartGrowInternWindow1();
                }
                return this.mUILoginStartGrowInternWindow1;
            }
        }
        #endregion
        
        #region Fields
        private AccederAppParams mAccederAppParams;
        
        private AsercionBotonLoginExpectedValues mAsercionBotonLoginExpectedValues;
        
        private LoginEnAppParams mLoginEnAppParams;
        
        private AsercionLoginCorrectoExpectedValues mAsercionLoginCorrectoExpectedValues;
        
        private AsercionNombreProyectoExpectedValues mAsercionNombreProyectoExpectedValues;
        
        private FiltrarProyectosParams mFiltrarProyectosParams;
        
        private AsercionTipoInversionExpectedValues mAsercionTipoInversionExpectedValues;
        
        private FiltrarProyectos2Params mFiltrarProyectos2Params;
        
        private AsercionErrorNoProyectoExpectedValues mAsercionErrorNoProyectoExpectedValues;
        
        private SeleccionarProyectoParams mSeleccionarProyectoParams;
        
        private AsercionBotonCreateExpectedValues mAsercionBotonCreateExpectedValues;
        
        private EstadoRechazadoRatingBParams mEstadoRechazadoRatingBParams;
        
        private AsercionErrorCreateExpectedValues mAsercionErrorCreateExpectedValues;
        
        private EstadoAceptadoRatingAParams mEstadoAceptadoRatingAParams;
        
        private AsercionErrorInteresPlazoExpectedValues mAsercionErrorInteresPlazoExpectedValues;
        
        private CreateCorrectoParams mCreateCorrectoParams;
        
        private AsercionDetailsExpectedValues mAsercionDetailsExpectedValues;
        
        private AsercionProyectosSinFiltrarExpectedValues mAsercionProyectosSinFiltrarExpectedValues;
        
        private AsercionProyectosFiltrados1ExpectedValues mAsercionProyectosFiltrados1ExpectedValues;
        
        private AsercionNoHayProyectosExpectedValues mAsercionNoHayProyectosExpectedValues;
        
        private FiltrarProyectos3Params mFiltrarProyectos3Params;
        
        private AccediendoAplicacionParams mAccediendoAplicacionParams;
        
        private AssertBotonLoginExpectedValues mAssertBotonLoginExpectedValues;
        
        private AccesoParams mAccesoParams;
        
        private AccesoAplicacionParams mAccesoAplicacionParams;
        
        private SeleccionarProyectoMYREDParams mSeleccionarProyectoMYREDParams;
        
        private AssertDetailsMYREDExpectedValues mAssertDetailsMYREDExpectedValues;
        
        private FiltrarProyectosJUSTNOWParams mFiltrarProyectosJUSTNOWParams;
        
        private SeleccionarProyectoJUSTNOWParams mSeleccionarProyectoJUSTNOWParams;
        
        private AsercionErrorCreateJUSTNOWExpectedValues mAsercionErrorCreateJUSTNOWExpectedValues;
        
        private AsercionErrorInteresPlazoJUSTNOWExpectedValues mAsercionErrorInteresPlazoJUSTNOWExpectedValues;
        
        private CreateCorrectoJUSTNOWParams mCreateCorrectoJUSTNOWParams;
        
        private AsercionDetailsJUSTNOWExpectedValues mAsercionDetailsJUSTNOWExpectedValues;
        
        private FiltrarProyectosPOCHOLOParams mFiltrarProyectosPOCHOLOParams;
        
        private SeleccionarProyectoPOCHOLOParams mSeleccionarProyectoPOCHOLOParams;
        
        private CreateCorrectoPOCHOLOParams mCreateCorrectoPOCHOLOParams;
        
        private AsercionDetailsPOCHOLOExpectedValues mAsercionDetailsPOCHOLOExpectedValues;
        
        private AsercionProyectosFiltradosSTOYKEExpectedValues mAsercionProyectosFiltradosSTOYKEExpectedValues;
        
        private AsercionProyectosFiltradosJUSTNOWExpectedValues mAsercionProyectosFiltradosJUSTNOWExpectedValues;
        
        private AsercionProyectosFiltradosPOCHOLOExpectedValues mAsercionProyectosFiltradosPOCHOLOExpectedValues;
        
        private UILoginStartGrowInternWindow mUILoginStartGrowInternWindow;
        
        private UISeleccionelosproyectWindow mUISeleccionelosproyectWindow;
        
        private UIGoogleInternetExplorWindow mUIGoogleInternetExplorWindow;
        
        private UILoginStartGrowInternWindow1 mUILoginStartGrowInternWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AccederApp'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AccederAppParams
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 1 segundos al retraso del usuario entre acciones; Ir a página web 'http://localhost:60421/'
        /// </summary>
        public string UILoginStartGrowInternWindowUrl = "http://localhost:60421/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionBotonLogin'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionBotonLoginExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Log in' vínculo es igual a 'Log in'
        /// </summary>
        public string UILoginHyperlinkInnerText = "Log in";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'LoginEnApp'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class LoginEnAppParams
    {
        
        #region Fields
        /// <summary>
        /// Esperar durante 1 segundos al retraso del usuario entre acciones; Escribir 'sergio' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText = "sergio";
        
        /// <summary>
        /// Escribir 'Alt, Control + 2' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditSendKeys = "2";
        
        /// <summary>
        /// Escribir 'sergio@startgrow.trabajador.com' en cuadro de texto 'Email'
        /// </summary>
        public string UIEmailEditText1 = "sergio@startgrow.trabajador.com";
        
        /// <summary>
        /// Escribir '********' en cuadro de texto 'Password'
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wPjZIULsN2+rGOa3csbMe0EDVskJFMJLSQ=";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionLoginCorrecto'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionLoginCorrectoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Hello sergio@startgrow.trabajador.com!' vínculo es igual a 'Hello sergio@startgrow.trabajador.com!'
        /// </summary>
        public string UIHellosergiostartgrowHyperlinkInnerText = "Hello sergio@startgrow.trabajador.com!";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionNombreProyecto'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionNombreProyectoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Nombre del proyecto' etiqueta es igual a 'Nombre del proyecto'
        /// </summary>
        public string UINombredelproyectoLabelInnerText = "Nombre del proyecto";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FiltrarProyectos'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class FiltrarProyectosParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBoxChecked = true;
        
        /// <summary>
        /// Escribir '64000' en cuadro de texto 'Capital'
        /// </summary>
        public string UICapitalEditText = "64000";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionTipoInversion'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionTipoInversionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Crownfunding' celda es igual a 'Crownfunding '
        /// </summary>
        public string UICrownfundingCellInnerText = "Crownfunding ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FiltrarProyectos2'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class FiltrarProyectos2Params
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBox1Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionErrorNoProyecto'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionErrorNoProyectoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'No hay proyectos para publicar' celda es igual a 'No hay proyectos para publicar'
        /// </summary>
        public string UINohayproyectosparapuCellInnerText = "No hay proyectos para publicar";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SeleccionarProyecto'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class SeleccionarProyectoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionBotonCreate'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionBotonCreateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'DisplayText' de 'Create' botón es igual a 'Create'
        /// </summary>
        public string UICreateButtonDisplayText = "Create";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'EstadoRechazadoRatingB'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class EstadoRechazadoRatingBParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Rechazada' en cuadro combinado 'Solicitudes[0].estados'
        /// </summary>
        public string UISolicitudes0estadosComboBoxSelectedItem = "Rechazada";
        
        /// <summary>
        /// Seleccionar 'B' en cuadro combinado 'Solicitudes[0].rating'
        /// </summary>
        public string UISolicitudes0ratingComboBoxSelectedItem = "B";
        
        /// <summary>
        /// Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
        /// </summary>
        public string UISolicitudes0interesEditText = "20";
        
        /// <summary>
        /// Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
        /// </summary>
        public string UISolicitudes0plazoEditText = "10";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionErrorCreate'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionErrorCreateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'La solicitud de STOYKE, no puede estar a' control personalizado es igual a 'La solicitud de STOYKE, no puede estar aprobada y tener una calificacion de F o viceversa'
        /// </summary>
        public string UILasolicituddeSTOYKEnCustomInnerText = "La solicitud de STOYKE, no puede estar aprobada y tener una calificacion de F o v" +
            "iceversa";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'EstadoAceptadoRatingA'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class EstadoAceptadoRatingAParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
        /// </summary>
        public string UISolicitudes0estadosComboBoxSelectedItem = "Aceptada";
        
        /// <summary>
        /// Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
        /// </summary>
        public string UISolicitudes0ratingComboBoxSelectedItem = "A";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionErrorInteresPlazo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionErrorInteresPlazoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'No se ha introducido correctamente el pl' control personalizado es igual a 'No se ha introducido correctamente el plazo o el interes del proyecto STOYKE'
        /// </summary>
        public string UINosehaintroducidocorCustomInnerText = "No se ha introducido correctamente el plazo o el interes del proyecto STOYKE";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CreateCorrecto'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CreateCorrectoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
        /// </summary>
        public string UISolicitudes0estadosComboBoxSelectedItem = "Aceptada";
        
        /// <summary>
        /// Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
        /// </summary>
        public string UISolicitudes0ratingComboBoxSelectedItem = "A";
        
        /// <summary>
        /// Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
        /// </summary>
        public string UISolicitudes0interesEditText = "20";
        
        /// <summary>
        /// Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
        /// </summary>
        public string UISolicitudes0plazoEditText = "10";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionDetails'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
        ///
        ///
        ///
        ///Nombre 
        ///
        ///Estado Solicitud 
        ///
        ///Rating 
        ///
        ///Interés 
        ///
        ///Plazo de Amortización 
        ///
        ///
        ///STOYKE Aceptada A 2 10 '
        /// </summary>
        public string UISolicitudNombreEstadPaneInnerText = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solicitud \r\n\r\nRating \r\n\r\nInterés \r\n\r\nPlazo de " +
            "Amortización \r\n\r\n\r\nSTOYKE Aceptada A 2 10 ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionProyectosSinFiltrar'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionProyectosSinFiltrarExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de '.areas { position: absolute; top: 150px;' panel es igual a '.areas { position: absolute; top: 150px; left: 100px; } .areas2 { position: absolute; top: 170px; left: 100px; } .rating { position: absolute; top: 580px; left: 100px; } .rating2 { position: absolute; top: 600px; left: 100px; } .tiposInversiones { position: absolute; top: 680px; left: 100px; } .tiposInversiones2 { position: absolute; top: 700px; left: 100px; } .InvMinima { position: absolute; top: 740px; left: 100px; } .InvMinima2 { position: absolute; top: 760px; left: 100px; } .interes { position: absolute; top: 960px; left: 100px; } .interes2 { position: absolute; top: 980px; left: 100px; } .plazo { position: absolute; top: 1060px; left: 100px; } .plazo2 { position: absolute; top: 1080px; left: 100px; } .botonFiltro { position: absolute; float: right; top: 800px; left: 100px; } .botonSave { position: absolute; float: right; top: 1060px; left: 100px; } table.GeneratedTable { left: 1000px; background-color: white; text-align: left; border-collapse: collapse; width: 100%; } table.GeneratedTable th, td { padding: 20px; } table.GeneratedTable thead { background-color: #246355; border-bottom: solid 5px #0F362D; color: white; } table.GeneratedTable tr:nth-child(even) { background-color: #ddd; } table.GeneratedTable tr:hover td { background-color: #369681; color: white; }  
        ///Publicar Proyectos
        ///
        ///
        ///
        ///
        ///Nombre del proyecto   
        ///
        ///areas 
        ///
        /// Salud 
        /// Pinturas 
        /// Drogería 
        /// Tecnología 
        /// Construcción 
        /// Transporte 
        /// TIC 
        /// Ingeniería 
        /// Hogar 
        /// Alimentación 
        /// Textil 
        /// Comercio 
        /// Hostelería 
        /// Administración 
        /// Automóviles 
        /// Reparaciones 
        /// Banca 
        /// Maquinaria 
        ///
        ///Tipos 
        ///
        /// Crownfunding 
        /// Business Angels 
        /// Venture Capital 
        ///
        ///Fecha de Expiracion  Capital  
        /// 
        ///
        ///
        ///
        ///
        ///
        ///Nombre del proyecto 
        ///
        ///Fecha de Expiración 
        ///
        ///Área temática 
        ///
        ///Tipo de inversión 
        ///
        ///Capital 
        ///
        ///Seleccionar 
        ///
        ///
        ///STOYKE 09/02/2019 Automóviles 
        /// Banca 
        ///Crownfunding 
        ///64000  
        ///MYRED 09/02/2019 Administración 
        ///Business Angels 
        /// Venture Capital 
        ///456000  
        ///JUST NOW 09/02/2019 Salud 
        /// Maquinaria 
        /// Alimentación 
        ///Venture Capital 
        /// Crownfunding 
        ///56000  
        ///Save Cancel 
        ///
        ///
        ///© 2018 - StartGrow'
        /// </summary>
        public string UIAreaspositionabsolutPaneInnerText = ".areas { position: absolute; top: 150px; left: 100px; } .areas2 { position: absol" +
            "ute; top: 170px; left: 100px; } .rating { position: absolute; top: 580px; left: " +
            "100px; } .rating2 { position: absolute; top: 600px; left: 100px; } .tiposInversi" +
            "ones { position: absolute; top: 680px; left: 100px; } .tiposInversiones2 { posit" +
            "ion: absolute; top: 700px; left: 100px; } .InvMinima { position: absolute; top: " +
            "740px; left: 100px; } .InvMinima2 { position: absolute; top: 760px; left: 100px;" +
            " } .interes { position: absolute; top: 960px; left: 100px; } .interes2 { positio" +
            "n: absolute; top: 980px; left: 100px; } .plazo { position: absolute; top: 1060px" +
            "; left: 100px; } .plazo2 { position: absolute; top: 1080px; left: 100px; } .boto" +
            "nFiltro { position: absolute; float: right; top: 800px; left: 100px; } .botonSav" +
            "e { position: absolute; float: right; top: 1060px; left: 100px; } table.Generate" +
            "dTable { left: 1000px; background-color: white; text-align: left; border-collaps" +
            "e: collapse; width: 100%; } table.GeneratedTable th, td { padding: 20px; } table" +
            ".GeneratedTable thead { background-color: #246355; border-bottom: solid 5px #0F3" +
            "62D; color: white; } table.GeneratedTable tr:nth-child(even) { background-color:" +
            " #ddd; } table.GeneratedTable tr:hover td { background-color: #369681; color: wh" +
            "ite; }  \r\nPublicar Proyectos\r\n\r\n\r\n\r\n\r\nNombre del proyecto   \r\n\r\nareas \r\n\r\n Salud" +
            " \r\n Pinturas \r\n Drogería \r\n Tecnología \r\n Construcción \r\n Transporte \r\n TIC \r\n I" +
            "ngeniería \r\n Hogar \r\n Alimentación \r\n Textil \r\n Comercio \r\n Hostelería \r\n Admini" +
            "stración \r\n Automóviles \r\n Reparaciones \r\n Banca \r\n Maquinaria \r\n\r\nTipos \r\n\r\n Cr" +
            "ownfunding \r\n Business Angels \r\n Venture Capital \r\n\r\nFecha de Expiracion  Capita" +
            "l  \r\n \r\n\r\n\r\n\r\n\r\n\r\nNombre del proyecto \r\n\r\nFecha de Expiración \r\n\r\nÁrea temática " +
            "\r\n\r\nTipo de inversión \r\n\r\nCapital \r\n\r\nSeleccionar \r\n\r\n\r\nSTOYKE 09/02/2019 Automó" +
            "viles \r\n Banca \r\nCrownfunding \r\n64000  \r\nMYRED 09/02/2019 Administración \r\nBusin" +
            "ess Angels \r\n Venture Capital \r\n456000  \r\nJUST NOW 09/02/2019 Salud \r\n Maquinari" +
            "a \r\n Alimentación \r\nVenture Capital \r\n Crownfunding \r\n56000  \r\nSave Cancel \r\n\r\n\r" +
            "\n© 2018 - StartGrow";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionProyectosFiltrados1'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionProyectosFiltrados1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de control personalizado es igual a '
        ///Nombre del proyecto 
        ///
        ///Fecha de Expiración 
        ///
        ///Área temática 
        ///
        ///Tipo de inversión 
        ///
        ///Capital 
        ///
        ///Seleccionar 
        ///
        ///
        ///STOYKE 09/02/2019 Automóviles 
        /// Banca 
        ///Crownfunding 
        ///64000  
        ///Save Cancel '
        /// </summary>
        public string UIItemCustomInnerText = "\r\nNombre del proyecto \r\n\r\nFecha de Expiración \r\n\r\nÁrea temática \r\n\r\nTipo de inver" +
            "sión \r\n\r\nCapital \r\n\r\nSeleccionar \r\n\r\n\r\nSTOYKE 09/02/2019 Automóviles \r\n Banca \r\n" +
            "Crownfunding \r\n64000  \r\nSave Cancel ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionNoHayProyectos'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionNoHayProyectosExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'No hay proyectos para publicar' celda es igual a 'No hay proyectos para publicar'
        /// </summary>
        public string UINohayproyectosparapuCellInnerText = "No hay proyectos para publicar";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FiltrarProyectos3'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class FiltrarProyectos3Params
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBoxChecked = true;
        
        /// <summary>
        /// Escribir '2019-02-09' en cuadro de texto 'Fecha de Expiracion'
        /// </summary>
        public string UIFechadeExpiracionEditText = "2019-02-09";
        
        /// <summary>
        /// Escribir '64000' en cuadro de texto 'Capital'
        /// </summary>
        public string UICapitalEditText = "64000";
        
        /// <summary>
        /// Escribir 'STOYKE' en cuadro de texto 'Nombre del proyecto'
        /// </summary>
        public string UINombredelproyectoEditText = "STOYKE";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AccediendoAplicacion'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AccediendoAplicacionParams
    {
        
        #region Fields
        /// <summary>
        /// Ir a página web 'https://localhost:44358/' mediante nueva instancia de explorador
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "https://localhost:44358/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertBotonLogin'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertBotonLoginExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Log in' botón es igual a 'Log in'
        /// </summary>
        public string UILoginButtonInnerText = "Log in";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'Acceso'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AccesoParams
    {
        
        #region Fields
        /// <summary>
        /// Ir a página web 'https://www.google.es/?gws_rd=ssl' mediante nueva instancia de explorador
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "https://www.google.es/?gws_rd=ssl";
        
        /// <summary>
        /// Ir a página web 'https://localhost:44358/'
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl1 = "https://localhost:44358/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AccesoAplicacion'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AccesoAplicacionParams
    {
        
        #region Fields
        /// <summary>
        /// Ir a página web 'https://localhost:44358/' mediante nueva instancia de explorador
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "https://localhost:44358/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SeleccionarProyectoMYRED'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class SeleccionarProyectoMYREDParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertDetailsMYRED'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertDetailsMYREDExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
        ///
        ///
        ///
        ///Nombre 
        ///
        ///Estado Solicitud 
        ///
        ///Rating 
        ///
        ///Interés 
        ///
        ///Plazo de Amortización 
        ///
        ///
        ///MYRED Aceptada A 2 10 '
        /// </summary>
        public string UISolicitudNombreEstadPaneInnerText = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solicitud \r\n\r\nRating \r\n\r\nInterés \r\n\r\nPlazo de " +
            "Amortización \r\n\r\n\r\nMYRED Aceptada A 2 10 ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FiltrarProyectosJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class FiltrarProyectosJUSTNOWParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBox2Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBox1Checked = true;
        
        /// <summary>
        /// Escribir '2019-2-9' en cuadro de texto 'Fecha de Expiracion'
        /// </summary>
        public string UIFechadeExpiracionEditText = "2019-2-9";
        
        /// <summary>
        /// Escribir '56000' en cuadro de texto 'Capital'
        /// </summary>
        public string UICapitalEditText = "56000";
        
        /// <summary>
        /// Escribir 'JUST NOW' en cuadro de texto 'Nombre del proyecto'
        /// </summary>
        public string UINombredelproyectoEditText = "JUST NOW";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SeleccionarProyectoJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class SeleccionarProyectoJUSTNOWParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox1Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionErrorCreateJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionErrorCreateJUSTNOWExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'La solicitud de JUST NOW, no puede estar' control personalizado es igual a 'La solicitud de JUST NOW, no puede estar aprobada y tener una calificacion de F o viceversa'
        /// </summary>
        public string UILasolicituddeJUSTNOWCustomInnerText = "La solicitud de JUST NOW, no puede estar aprobada y tener una calificacion de F o" +
            " viceversa";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionErrorInteresPlazoJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionErrorInteresPlazoJUSTNOWExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'No se ha introducido correctamente el pl' control personalizado es igual a 'No se ha introducido correctamente el plazo o el interes del proyecto JUST NOW'
        /// </summary>
        public string UINosehaintroducidocorCustomInnerText = "No se ha introducido correctamente el plazo o el interes del proyecto JUST NOW";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CreateCorrectoJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CreateCorrectoJUSTNOWParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
        /// </summary>
        public string UISolicitudes0estadosComboBoxSelectedItem = "Aceptada";
        
        /// <summary>
        /// Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
        /// </summary>
        public string UISolicitudes0ratingComboBoxSelectedItem = "A";
        
        /// <summary>
        /// Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
        /// </summary>
        public string UISolicitudes0interesEditText = "20";
        
        /// <summary>
        /// Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
        /// </summary>
        public string UISolicitudes0plazoEditText = "10";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionDetailsJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionDetailsJUSTNOWExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
        ///
        ///
        ///
        ///Nombre 
        ///
        ///Estado Solicitud 
        ///
        ///Rating 
        ///
        ///Interés 
        ///
        ///Plazo de Amortización 
        ///
        ///
        ///JUST NOW Aceptada A 2 10 '
        /// </summary>
        public string UISolicitudNombreEstadPaneInnerText = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solicitud \r\n\r\nRating \r\n\r\nInterés \r\n\r\nPlazo de " +
            "Amortización \r\n\r\n\r\nJUST NOW Aceptada A 2 10 ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'FiltrarProyectosPOCHOLO'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class FiltrarProyectosPOCHOLOParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'areasSeleccionada'
        /// </summary>
        public bool UIAreasSeleccionadaCheckBox3Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBox11Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'tipoSeleccionado'
        /// </summary>
        public bool UITipoSeleccionadoCheckBox1Checked = true;
        
        /// <summary>
        /// Escribir '2019-02-09' en cuadro de texto 'Fecha de Expiracion'
        /// </summary>
        public string UIFechadeExpiracionEditText = "2019-02-09";
        
        /// <summary>
        /// Escribir '100000' en cuadro de texto 'Capital'
        /// </summary>
        public string UICapitalEditText = "100000";
        
        /// <summary>
        /// Escribir 'POCHOLO RULES' en cuadro de texto 'Nombre del proyecto'
        /// </summary>
        public string UINombredelproyectoEditText = "POCHOLO RULES";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SeleccionarProyectoPOCHOLO'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class SeleccionarProyectoPOCHOLOParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CreateCorrectoPOCHOLO'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CreateCorrectoPOCHOLOParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Aceptada' en cuadro combinado 'Solicitudes[0].estados'
        /// </summary>
        public string UISolicitudes0estadosComboBoxSelectedItem = "Aceptada";
        
        /// <summary>
        /// Seleccionar 'A' en cuadro combinado 'Solicitudes[0].rating'
        /// </summary>
        public string UISolicitudes0ratingComboBoxSelectedItem = "A";
        
        /// <summary>
        /// Escribir '20' en cuadro de texto 'Solicitudes[0].interes'
        /// </summary>
        public string UISolicitudes0interesEditText = "20";
        
        /// <summary>
        /// Escribir '{Tab}' en cuadro de texto 'Solicitudes[0].interes'
        /// </summary>
        public string UISolicitudes0interesEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Escribir '10' en cuadro de texto 'Solicitudes[0].plazo'
        /// </summary>
        public string UISolicitudes0plazoEditText = "10";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionDetailsPOCHOLO'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionDetailsPOCHOLOExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Solicitud Nombre Estado Solic' panel es igual a 'Solicitud
        ///
        ///
        ///
        ///Nombre 
        ///
        ///Estado Solicitud 
        ///
        ///Rating 
        ///
        ///Interés 
        ///
        ///Plazo de Amortización 
        ///
        ///
        ///POCHOLO RULES Aceptada A 2 10 '
        /// </summary>
        public string UISolicitudNombreEstadPaneInnerText = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solicitud \r\n\r\nRating \r\n\r\nInterés \r\n\r\nPlazo de " +
            "Amortización \r\n\r\n\r\nPOCHOLO RULES Aceptada A 2 10 ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionProyectosFiltradosSTOYKE'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionProyectosFiltradosSTOYKEExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'STOYKE' celda es igual a 'STOYKE '
        /// </summary>
        public string UISTOYKECellInnerText = "STOYKE ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionProyectosFiltradosJUSTNOW'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionProyectosFiltradosJUSTNOWExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'JUST NOW' celda es igual a 'JUST NOW '
        /// </summary>
        public string UIJUSTNOWCellInnerText = "JUST NOW ";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AsercionProyectosFiltradosPOCHOLO'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AsercionProyectosFiltradosPOCHOLOExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'POCHOLO RULES' celda es igual a 'POCHOLO RULES '
        /// </summary>
        public string UIPOCHOLORULESCellInnerText = "POCHOLO RULES ";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowInternWindow : BrowserWindow
    {
        
        public UILoginStartGrowInternWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILoginStartGrowDocument UILoginStartGrowDocument
        {
            get
            {
                if ((this.mUILoginStartGrowDocument == null))
                {
                    this.mUILoginStartGrowDocument = new UILoginStartGrowDocument(this);
                }
                return this.mUILoginStartGrowDocument;
            }
        }
        
        public UILoginStartGrowDocument1 UILoginStartGrowDocument1
        {
            get
            {
                if ((this.mUILoginStartGrowDocument1 == null))
                {
                    this.mUILoginStartGrowDocument1 = new UILoginStartGrowDocument1(this);
                }
                return this.mUILoginStartGrowDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UILoginStartGrowDocument mUILoginStartGrowDocument;
        
        private UILoginStartGrowDocument1 mUILoginStartGrowDocument1;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowDocument : HtmlDocument
    {
        
        public UILoginStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Account/Login?ReturnUrl=%2F";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:60421/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUILoginHyperlink.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUILoginButton.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILoginHyperlink;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlButton mUILoginButton;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowDocument1 : HtmlDocument
    {
        
        public UILoginStartGrowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Account/Login";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:60421/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUILoginHyperlink.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILoginHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectWindow : BrowserWindow
    {
        
        public UISeleccionelosproyectWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISeleccionelosproyectDocument UISeleccionelosproyectDocument
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument == null))
                {
                    this.mUISeleccionelosproyectDocument = new UISeleccionelosproyectDocument(this);
                }
                return this.mUISeleccionelosproyectDocument;
            }
        }
        
        public UISeleccionelosproyectDocument1 UISeleccionelosproyectDocument1
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument1 == null))
                {
                    this.mUISeleccionelosproyectDocument1 = new UISeleccionelosproyectDocument1(this);
                }
                return this.mUISeleccionelosproyectDocument1;
            }
        }
        
        public UISeleccionelosproyectDocument2 UISeleccionelosproyectDocument2
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument2 == null))
                {
                    this.mUISeleccionelosproyectDocument2 = new UISeleccionelosproyectDocument2(this);
                }
                return this.mUISeleccionelosproyectDocument2;
            }
        }
        
        public UICreateStartGrowDocument UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        
        public UICreateStartGrowDocument1 UICreateStartGrowDocument1
        {
            get
            {
                if ((this.mUICreateStartGrowDocument1 == null))
                {
                    this.mUICreateStartGrowDocument1 = new UICreateStartGrowDocument1(this);
                }
                return this.mUICreateStartGrowDocument1;
            }
        }
        
        public UIDetailsStartGrowDocument UIDetailsStartGrowDocument
        {
            get
            {
                if ((this.mUIDetailsStartGrowDocument == null))
                {
                    this.mUIDetailsStartGrowDocument = new UIDetailsStartGrowDocument(this);
                }
                return this.mUIDetailsStartGrowDocument;
            }
        }
        
        public UISeleccionelosproyectDocument3 UISeleccionelosproyectDocument3
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument3 == null))
                {
                    this.mUISeleccionelosproyectDocument3 = new UISeleccionelosproyectDocument3(this);
                }
                return this.mUISeleccionelosproyectDocument3;
            }
        }
        
        public UISeleccionelosproyectDocument4 UISeleccionelosproyectDocument4
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument4 == null))
                {
                    this.mUISeleccionelosproyectDocument4 = new UISeleccionelosproyectDocument4(this);
                }
                return this.mUISeleccionelosproyectDocument4;
            }
        }
        
        public UIDetailsStartGrowDocument1 UIDetailsStartGrowDocument1
        {
            get
            {
                if ((this.mUIDetailsStartGrowDocument1 == null))
                {
                    this.mUIDetailsStartGrowDocument1 = new UIDetailsStartGrowDocument1(this);
                }
                return this.mUIDetailsStartGrowDocument1;
            }
        }
        
        public UISeleccionelosproyectDocument5 UISeleccionelosproyectDocument5
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument5 == null))
                {
                    this.mUISeleccionelosproyectDocument5 = new UISeleccionelosproyectDocument5(this);
                }
                return this.mUISeleccionelosproyectDocument5;
            }
        }
        
        public UICreateStartGrowDocument2 UICreateStartGrowDocument2
        {
            get
            {
                if ((this.mUICreateStartGrowDocument2 == null))
                {
                    this.mUICreateStartGrowDocument2 = new UICreateStartGrowDocument2(this);
                }
                return this.mUICreateStartGrowDocument2;
            }
        }
        
        public UICreateStartGrowDocument3 UICreateStartGrowDocument3
        {
            get
            {
                if ((this.mUICreateStartGrowDocument3 == null))
                {
                    this.mUICreateStartGrowDocument3 = new UICreateStartGrowDocument3(this);
                }
                return this.mUICreateStartGrowDocument3;
            }
        }
        
        public UIDetailsStartGrowDocument2 UIDetailsStartGrowDocument2
        {
            get
            {
                if ((this.mUIDetailsStartGrowDocument2 == null))
                {
                    this.mUIDetailsStartGrowDocument2 = new UIDetailsStartGrowDocument2(this);
                }
                return this.mUIDetailsStartGrowDocument2;
            }
        }
        
        public UISeleccionelosproyectDocument6 UISeleccionelosproyectDocument6
        {
            get
            {
                if ((this.mUISeleccionelosproyectDocument6 == null))
                {
                    this.mUISeleccionelosproyectDocument6 = new UISeleccionelosproyectDocument6(this);
                }
                return this.mUISeleccionelosproyectDocument6;
            }
        }
        
        public UICreateStartGrowDocument4 UICreateStartGrowDocument4
        {
            get
            {
                if ((this.mUICreateStartGrowDocument4 == null))
                {
                    this.mUICreateStartGrowDocument4 = new UICreateStartGrowDocument4(this);
                }
                return this.mUICreateStartGrowDocument4;
            }
        }
        
        public UIDetailsStartGrowDocument3 UIDetailsStartGrowDocument3
        {
            get
            {
                if ((this.mUIDetailsStartGrowDocument3 == null))
                {
                    this.mUIDetailsStartGrowDocument3 = new UIDetailsStartGrowDocument3(this);
                }
                return this.mUIDetailsStartGrowDocument3;
            }
        }
        #endregion
        
        #region Fields
        private UISeleccionelosproyectDocument mUISeleccionelosproyectDocument;
        
        private UISeleccionelosproyectDocument1 mUISeleccionelosproyectDocument1;
        
        private UISeleccionelosproyectDocument2 mUISeleccionelosproyectDocument2;
        
        private UICreateStartGrowDocument mUICreateStartGrowDocument;
        
        private UICreateStartGrowDocument1 mUICreateStartGrowDocument1;
        
        private UIDetailsStartGrowDocument mUIDetailsStartGrowDocument;
        
        private UISeleccionelosproyectDocument3 mUISeleccionelosproyectDocument3;
        
        private UISeleccionelosproyectDocument4 mUISeleccionelosproyectDocument4;
        
        private UIDetailsStartGrowDocument1 mUIDetailsStartGrowDocument1;
        
        private UISeleccionelosproyectDocument5 mUISeleccionelosproyectDocument5;
        
        private UICreateStartGrowDocument2 mUICreateStartGrowDocument2;
        
        private UICreateStartGrowDocument3 mUICreateStartGrowDocument3;
        
        private UIDetailsStartGrowDocument2 mUIDetailsStartGrowDocument2;
        
        private UISeleccionelosproyectDocument6 mUISeleccionelosproyectDocument6;
        
        private UICreateStartGrowDocument4 mUICreateStartGrowDocument4;
        
        private UIDetailsStartGrowDocument3 mUIDetailsStartGrowDocument3;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public UILogoutFormCustom UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        
        public HtmlLabel UINombredelproyectoLabel
        {
            get
            {
                if ((this.mUINombredelproyectoLabel == null))
                {
                    this.mUINombredelproyectoLabel = new HtmlLabel(this);
                    #region Criterio de búsqueda
                    this.mUINombredelproyectoLabel.SearchProperties[HtmlLabel.PropertyNames.Id] = null;
                    this.mUINombredelproyectoLabel.SearchProperties[HtmlLabel.PropertyNames.Name] = null;
                    this.mUINombredelproyectoLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "nombreProyecto";
                    this.mUINombredelproyectoLabel.SearchProperties[HtmlLabel.PropertyNames.InnerText] = "Nombre del proyecto";
                    this.mUINombredelproyectoLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = null;
                    this.mUINombredelproyectoLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "for=\"nombreProyecto\"";
                    this.mUINombredelproyectoLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "1";
                    this.mUINombredelproyectoLabel.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUINombredelproyectoLabel;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox == null))
                {
                    this.mUIAreasSeleccionadaCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Automóviles";
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "17";
                    this.mUIAreasSeleccionadaCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox;
            }
        }
        
        public HtmlCheckBox UITipoSeleccionadoCheckBox
        {
            get
            {
                if ((this.mUITipoSeleccionadoCheckBox == null))
                {
                    this.mUITipoSeleccionadoCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "tipoSeleccionado";
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Crownfunding";
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"tipoSeleccionado\" type=\"checkbox\" ";
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "21";
                    this.mUITipoSeleccionadoCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUITipoSeleccionadoCheckBox;
            }
        }
        
        public HtmlEdit UICapitalEdit
        {
            get
            {
                if ((this.mUICapitalEdit == null))
                {
                    this.mUICapitalEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUICapitalEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "capital";
                    this.mUICapitalEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "capital";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Capital";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "InvMinima2";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"capital\" class=\"InvMinima2\" id=\"ca";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "25";
                    this.mUICapitalEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUICapitalEdit;
            }
        }
        
        public HtmlInputButton UIFiltrarButton
        {
            get
            {
                if ((this.mUIFiltrarButton == null))
                {
                    this.mUIFiltrarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Filtrar";
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "botonFiltro";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"botonFiltro\" type=\"submit\" value=";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "26";
                    this.mUIFiltrarButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIFiltrarButton;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox1
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox1 == null))
                {
                    this.mUIAreasSeleccionadaCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Banca";
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "19";
                    this.mUIAreasSeleccionadaCheckBox1.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox1;
            }
        }
        
        public HtmlCheckBox UITipoSeleccionadoCheckBox1
        {
            get
            {
                if ((this.mUITipoSeleccionadoCheckBox1 == null))
                {
                    this.mUITipoSeleccionadoCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "tipoSeleccionado";
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Venture Capital";
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"tipoSeleccionado\" type=\"checkbox\" ";
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "23";
                    this.mUITipoSeleccionadoCheckBox1.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUITipoSeleccionadoCheckBox1;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "23";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"2";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "27";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUISaveButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlDiv UIAreaspositionabsolutPane
        {
            get
            {
                if ((this.mUIAreaspositionabsolutPane == null))
                {
                    this.mUIAreaspositionabsolutPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".areas { position: absolute; top: 150px;";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIAreaspositionabsolutPane.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreaspositionabsolutPane;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlEdit UIFechadeExpiracionEdit
        {
            get
            {
                if ((this.mUIFechadeExpiracionEdit == null))
                {
                    this.mUIFechadeExpiracionEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechadeExpiracionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "fecha";
                    this.mUIFechadeExpiracionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "fecha";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha de Expiracion";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "tiposInversiones2";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fecha\" class=\"tiposInversiones2\" i";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "24";
                    this.mUIFechadeExpiracionEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIFechadeExpiracionEdit;
            }
        }
        
        public HtmlEdit UINombredelproyectoEdit
        {
            get
            {
                if ((this.mUINombredelproyectoEdit == null))
                {
                    this.mUINombredelproyectoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUINombredelproyectoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "nombreProyecto";
                    this.mUINombredelproyectoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "nombreProyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Nombre del proyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"nombreProyecto\" id=\"nombreProyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINombredelproyectoEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUINombredelproyectoEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILogoutFormCustom mUILogoutFormCustom;
        
        private HtmlLabel mUINombredelproyectoLabel;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox;
        
        private HtmlCheckBox mUITipoSeleccionadoCheckBox;
        
        private HtmlEdit mUICapitalEdit;
        
        private HtmlInputButton mUIFiltrarButton;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox1;
        
        private HtmlCheckBox mUITipoSeleccionadoCheckBox1;
        
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlButton mUISaveButton;
        
        private HtmlDiv mUIAreaspositionabsolutPane;
        
        private UIItemTable mUIItemTable;
        
        private HtmlEdit mUIFechadeExpiracionEdit;
        
        private HtmlEdit mUINombredelproyectoEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILogoutFormCustom : HtmlCustom
    {
        
        public UILogoutFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHellosergiostartgrowHyperlink
        {
            get
            {
                if ((this.mUIHellosergiostartgrowHyperlink == null))
                {
                    this.mUIHellosergiostartgrowHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIHellosergiostartgrowHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHellosergiostartgrowHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHellosergiostartgrowHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHellosergiostartgrowHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hello sergio@startgrow.trabajador.com!";
                    this.mUIHellosergiostartgrowHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage/Index";
                    this.mUIHellosergiostartgrowHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIHellosergiostartgrowHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:60421/Manage/Index";
                    this.mUIHellosergiostartgrowHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHellosergiostartgrowHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Manage\" href=\"/Manage/Index\"";
                    this.mUIHellosergiostartgrowHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHellosergiostartgrowHyperlink.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIHellosergiostartgrowHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHellosergiostartgrowHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Nombre del proyecto \r\n\r\nFecha de Expirac";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"GeneratedTable\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "GeneratedTable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCell UINohayproyectosparapuCell
        {
            get
            {
                if ((this.mUINohayproyectosparapuCell == null))
                {
                    this.mUINohayproyectosparapuCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "No hay proyectos para publicar";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "colspan=\"3\"";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "5";
                    this.mUINohayproyectosparapuCell.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUINohayproyectosparapuCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUINohayproyectosparapuCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument1 : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/?nombreProyecto=&areasSeleccionada=Autom%C3%B3viles&tipoSe" +
                "leccionado=Crownfunding&fecha=&capital=64000";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public UIItemTable1 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable1(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable1 mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemTable1 : HtmlTable
    {
        
        public UIItemTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Nombre del proyecto \r\n\r\nFecha de Expirac";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"GeneratedTable\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "GeneratedTable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCell UICrownfundingCell
        {
            get
            {
                if ((this.mUICrownfundingCell == null))
                {
                    this.mUICrownfundingCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUICrownfundingCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUICrownfundingCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUICrownfundingCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUICrownfundingCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Crownfunding ";
                    this.mUICrownfundingCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUICrownfundingCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUICrownfundingCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "3";
                    this.mUICrownfundingCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUICrownfundingCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "8";
                    this.mUICrownfundingCell.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUICrownfundingCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUICrownfundingCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument2 : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/?nombreProyecto=&areasSeleccionada=Banca&tipoSeleccionado=" +
                "Venture+Capital&fecha=&capital=0";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public UIItemTable2 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable2(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTable2 mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemTable2 : HtmlTable
    {
        
        public UIItemTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Nombre del proyecto \r\n\r\nFecha de Expirac";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"GeneratedTable\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "GeneratedTable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCell UINohayproyectosparapuCell
        {
            get
            {
                if ((this.mUINohayproyectosparapuCell == null))
                {
                    this.mUINohayproyectosparapuCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUINohayproyectosparapuCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "No hay proyectos para publicar";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "colspan=\"3\"";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUINohayproyectosparapuCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "5";
                    this.mUINohayproyectosparapuCell.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUINohayproyectosparapuCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUINohayproyectosparapuCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument : HtmlDocument
    {
        
        public UICreateStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Solicitudes/Create?IdsToAdd=23";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    this.mUICreateButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public HtmlComboBox UISolicitudes0estadosComboBox
        {
            get
            {
                if ((this.mUISolicitudes0estadosComboBox == null))
                {
                    this.mUISolicitudes0estadosComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0estadosComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "Solicitudes_0__estados";
                    this.mUISolicitudes0estadosComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "Solicitudes[0].estados";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].estados\" id=\"Solici";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUISolicitudes0estadosComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0estadosComboBox;
            }
        }
        
        public HtmlComboBox UISolicitudes0ratingComboBox
        {
            get
            {
                if ((this.mUISolicitudes0ratingComboBox == null))
                {
                    this.mUISolicitudes0ratingComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0ratingComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "Solicitudes_0__rating";
                    this.mUISolicitudes0ratingComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "Solicitudes[0].rating";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "6";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].rating\" id=\"Solicit";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUISolicitudes0ratingComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0ratingComboBox;
            }
        }
        
        public HtmlEdit UISolicitudes0interesEdit
        {
            get
            {
                if ((this.mUISolicitudes0interesEdit == null))
                {
                    this.mUISolicitudes0interesEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0interesEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Solicitudes_0__interes";
                    this.mUISolicitudes0interesEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Solicitudes[0].interes";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].interes\" id=\"Solici";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUISolicitudes0interesEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0interesEdit;
            }
        }
        
        public HtmlEdit UISolicitudes0plazoEdit
        {
            get
            {
                if ((this.mUISolicitudes0plazoEdit == null))
                {
                    this.mUISolicitudes0plazoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0plazoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Solicitudes_0__plazo";
                    this.mUISolicitudes0plazoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Solicitudes[0].plazo";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].plazo\" id=\"Solicitu";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUISolicitudes0plazoEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0plazoEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICreateButton;
        
        private HtmlComboBox mUISolicitudes0estadosComboBox;
        
        private HtmlComboBox mUISolicitudes0ratingComboBox;
        
        private HtmlEdit mUISolicitudes0interesEdit;
        
        private HtmlEdit mUISolicitudes0plazoEdit;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument1 : HtmlDocument
    {
        
        public UICreateStartGrowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Solicitudes/Create";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UILasolicituddeSTOYKEnCustom
        {
            get
            {
                if ((this.mUILasolicituddeSTOYKEnCustom == null))
                {
                    this.mUILasolicituddeSTOYKEnCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUILasolicituddeSTOYKEnCustom.SearchProperties["TagName"] = "LI";
                    this.mUILasolicituddeSTOYKEnCustom.SearchProperties["Id"] = null;
                    this.mUILasolicituddeSTOYKEnCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUILasolicituddeSTOYKEnCustom.FilterProperties["Class"] = null;
                    this.mUILasolicituddeSTOYKEnCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUILasolicituddeSTOYKEnCustom.FilterProperties["InnerText"] = "La solicitud de STOYKE, no puede estar a";
                    this.mUILasolicituddeSTOYKEnCustom.FilterProperties["TagInstance"] = "6";
                    this.mUILasolicituddeSTOYKEnCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUILasolicituddeSTOYKEnCustom;
            }
        }
        
        public HtmlCustom UINosehaintroducidocorCustom
        {
            get
            {
                if ((this.mUINosehaintroducidocorCustom == null))
                {
                    this.mUINosehaintroducidocorCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUINosehaintroducidocorCustom.SearchProperties["TagName"] = "LI";
                    this.mUINosehaintroducidocorCustom.SearchProperties["Id"] = null;
                    this.mUINosehaintroducidocorCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUINosehaintroducidocorCustom.FilterProperties["Class"] = null;
                    this.mUINosehaintroducidocorCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUINosehaintroducidocorCustom.FilterProperties["InnerText"] = "No se ha introducido correctamente el pl";
                    this.mUINosehaintroducidocorCustom.FilterProperties["TagInstance"] = "6";
                    this.mUINosehaintroducidocorCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUINosehaintroducidocorCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUILasolicituddeSTOYKEnCustom;
        
        private HtmlCustom mUINosehaintroducidocorCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowDocument : HtmlDocument
    {
        
        public UIDetailsStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Details";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/Solicitudes/Details?ids=3";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISolicitudNombreEstadPane
        {
            get
            {
                if ((this.mUISolicitudNombreEstadPane == null))
                {
                    this.mUISolicitudNombreEstadPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solic";
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUISolicitudNombreEstadPane.WindowTitles.Add("Details - StartGrow");
                    #endregion
                }
                return this.mUISolicitudNombreEstadPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISolicitudNombreEstadPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument3 : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60421/?nombreProyecto=&areasSeleccionada=Autom%C3%B3viles&fecha=" +
                "&capital=0";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIItemCustom.SearchProperties["TagName"] = "FORM";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "action=\"/\" method=\"post\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "3";
                    this.mUIItemCustom.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument4 : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/SelectProyectosForSolicitud";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/SelectProyectosForSolicitud";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "24";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"2";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "28";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUISaveButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox == null))
                {
                    this.mUIAreasSeleccionadaCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Salud";
                    this.mUIAreasSeleccionadaCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "3";
                    this.mUIAreasSeleccionadaCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox1
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox1 == null))
                {
                    this.mUIAreasSeleccionadaCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Alimentación";
                    this.mUIAreasSeleccionadaCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "12";
                    this.mUIAreasSeleccionadaCheckBox1.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox1;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox2
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox2 == null))
                {
                    this.mUIAreasSeleccionadaCheckBox2 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Maquinaria";
                    this.mUIAreasSeleccionadaCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "20";
                    this.mUIAreasSeleccionadaCheckBox2.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox2;
            }
        }
        
        public HtmlCheckBox UITipoSeleccionadoCheckBox
        {
            get
            {
                if ((this.mUITipoSeleccionadoCheckBox == null))
                {
                    this.mUITipoSeleccionadoCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "tipoSeleccionado";
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Crownfunding";
                    this.mUITipoSeleccionadoCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"tipoSeleccionado\" type=\"checkbox\" ";
                    this.mUITipoSeleccionadoCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "21";
                    this.mUITipoSeleccionadoCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUITipoSeleccionadoCheckBox;
            }
        }
        
        public HtmlCheckBox UITipoSeleccionadoCheckBox1
        {
            get
            {
                if ((this.mUITipoSeleccionadoCheckBox1 == null))
                {
                    this.mUITipoSeleccionadoCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "tipoSeleccionado";
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Venture Capital";
                    this.mUITipoSeleccionadoCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"tipoSeleccionado\" type=\"checkbox\" ";
                    this.mUITipoSeleccionadoCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "23";
                    this.mUITipoSeleccionadoCheckBox1.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUITipoSeleccionadoCheckBox1;
            }
        }
        
        public HtmlEdit UIFechadeExpiracionEdit
        {
            get
            {
                if ((this.mUIFechadeExpiracionEdit == null))
                {
                    this.mUIFechadeExpiracionEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIFechadeExpiracionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "fecha";
                    this.mUIFechadeExpiracionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "fecha";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Fecha de Expiracion";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "tiposInversiones2";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"fecha\" class=\"tiposInversiones2\" i";
                    this.mUIFechadeExpiracionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "24";
                    this.mUIFechadeExpiracionEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIFechadeExpiracionEdit;
            }
        }
        
        public HtmlEdit UICapitalEdit
        {
            get
            {
                if ((this.mUICapitalEdit == null))
                {
                    this.mUICapitalEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUICapitalEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "capital";
                    this.mUICapitalEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "capital";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Capital";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "InvMinima2";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"capital\" class=\"InvMinima2\" id=\"ca";
                    this.mUICapitalEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "25";
                    this.mUICapitalEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUICapitalEdit;
            }
        }
        
        public HtmlEdit UINombredelproyectoEdit
        {
            get
            {
                if ((this.mUINombredelproyectoEdit == null))
                {
                    this.mUINombredelproyectoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUINombredelproyectoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "nombreProyecto";
                    this.mUINombredelproyectoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "nombreProyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Nombre del proyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"nombreProyecto\" id=\"nombreProyecto";
                    this.mUINombredelproyectoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINombredelproyectoEdit.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUINombredelproyectoEdit;
            }
        }
        
        public HtmlInputButton UIFiltrarButton
        {
            get
            {
                if ((this.mUIFiltrarButton == null))
                {
                    this.mUIFiltrarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Filtrar";
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "botonFiltro";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"botonFiltro\" type=\"submit\" value=";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "26";
                    this.mUIFiltrarButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIFiltrarButton;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox1
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox1 == null))
                {
                    this.mUIIdsToAddCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "25";
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"2";
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "29";
                    this.mUIIdsToAddCheckBox1.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox1;
            }
        }
        
        public HtmlCheckBox UIAreasSeleccionadaCheckBox3
        {
            get
            {
                if ((this.mUIAreasSeleccionadaCheckBox3 == null))
                {
                    this.mUIAreasSeleccionadaCheckBox3 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIAreasSeleccionadaCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIAreasSeleccionadaCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "areasSeleccionada";
                    this.mUIAreasSeleccionadaCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Transporte";
                    this.mUIAreasSeleccionadaCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIAreasSeleccionadaCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIAreasSeleccionadaCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIAreasSeleccionadaCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"areasSeleccionada\" type=\"checkbox\"";
                    this.mUIAreasSeleccionadaCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "8";
                    this.mUIAreasSeleccionadaCheckBox3.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIAreasSeleccionadaCheckBox3;
            }
        }
        
        public HtmlCheckBox UITipoSeleccionadoCheckBox11
        {
            get
            {
                if ((this.mUITipoSeleccionadoCheckBox11 == null))
                {
                    this.mUITipoSeleccionadoCheckBox11 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUITipoSeleccionadoCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUITipoSeleccionadoCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "tipoSeleccionado";
                    this.mUITipoSeleccionadoCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Business Angels";
                    this.mUITipoSeleccionadoCheckBox11.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUITipoSeleccionadoCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUITipoSeleccionadoCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUITipoSeleccionadoCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"tipoSeleccionado\" type=\"checkbox\" ";
                    this.mUITipoSeleccionadoCheckBox11.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "22";
                    this.mUITipoSeleccionadoCheckBox11.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUITipoSeleccionadoCheckBox11;
            }
        }
        
        public UIItemTable3 UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable3(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public UILogoutFormCustom1 UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom1(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlButton mUISaveButton;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox1;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox2;
        
        private HtmlCheckBox mUITipoSeleccionadoCheckBox;
        
        private HtmlCheckBox mUITipoSeleccionadoCheckBox1;
        
        private HtmlEdit mUIFechadeExpiracionEdit;
        
        private HtmlEdit mUICapitalEdit;
        
        private HtmlEdit mUINombredelproyectoEdit;
        
        private HtmlInputButton mUIFiltrarButton;
        
        private HtmlCheckBox mUIIdsToAddCheckBox1;
        
        private HtmlCheckBox mUIAreasSeleccionadaCheckBox3;
        
        private HtmlCheckBox mUITipoSeleccionadoCheckBox11;
        
        private UIItemTable3 mUIItemTable;
        
        private UILogoutFormCustom1 mUILogoutFormCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemTable3 : HtmlTable
    {
        
        public UIItemTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Nombre del proyecto \r\n\r\nFecha de Expirac";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"GeneratedTable\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "GeneratedTable";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCell UISTOYKECell
        {
            get
            {
                if ((this.mUISTOYKECell == null))
                {
                    this.mUISTOYKECell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUISTOYKECell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUISTOYKECell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUISTOYKECell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUISTOYKECell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "STOYKE ";
                    this.mUISTOYKECell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUISTOYKECell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUISTOYKECell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUISTOYKECell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUISTOYKECell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "5";
                    this.mUISTOYKECell.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUISTOYKECell;
            }
        }
        
        public HtmlCell UIJUSTNOWCell
        {
            get
            {
                if ((this.mUIJUSTNOWCell == null))
                {
                    this.mUIJUSTNOWCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUIJUSTNOWCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIJUSTNOWCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIJUSTNOWCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIJUSTNOWCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "JUST NOW ";
                    this.mUIJUSTNOWCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIJUSTNOWCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
                    this.mUIJUSTNOWCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIJUSTNOWCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIJUSTNOWCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "17";
                    this.mUIJUSTNOWCell.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIJUSTNOWCell;
            }
        }
        
        public HtmlCell UIPOCHOLORULESCell
        {
            get
            {
                if ((this.mUIPOCHOLORULESCell == null))
                {
                    this.mUIPOCHOLORULESCell = new HtmlCell(this);
                    #region Criterio de búsqueda
                    this.mUIPOCHOLORULESCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIPOCHOLORULESCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIPOCHOLORULESCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIPOCHOLORULESCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "POCHOLO RULES ";
                    this.mUIPOCHOLORULESCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIPOCHOLORULESCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUIPOCHOLORULESCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIPOCHOLORULESCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIPOCHOLORULESCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "23";
                    this.mUIPOCHOLORULESCell.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIPOCHOLORULESCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUISTOYKECell;
        
        private HtmlCell mUIJUSTNOWCell;
        
        private HtmlCell mUIPOCHOLORULESCell;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILogoutFormCustom1 : HtmlCustom
    {
        
        public UILogoutFormCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "navbar-right";
            this.FilterProperties["ControlDefinition"] = "class=\"navbar-right\" id=\"logoutForm\" act";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILogoutButton
        {
            get
            {
                if ((this.mUILogoutButton == null))
                {
                    this.mUILogoutButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log out";
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-link navbar-btn navbar-link";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-link navbar-btn navbar-li";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUILogoutButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUILogoutButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILogoutButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowDocument1 : HtmlDocument
    {
        
        public UIDetailsStartGrowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Details";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/Details?ids=12";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISolicitudNombreEstadPane
        {
            get
            {
                if ((this.mUISolicitudNombreEstadPane == null))
                {
                    this.mUISolicitudNombreEstadPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solic";
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUISolicitudNombreEstadPane.WindowTitles.Add("Details - StartGrow");
                    #endregion
                }
                return this.mUISolicitudNombreEstadPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISolicitudNombreEstadPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument5 : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/SelectProyectosForSolicitud";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"https://localhost:44358/Solicitudes/SelectProyectosForSolicitud?nombreProyecto=JUST+NOW&areasSeleccionada=Salud&areasSeleccionada=Alimentaci%C3%B3n&areasSeleccionada=Maquinaria&tipoSeleccionado=Crownfunding&tipoSeleccionado=Venture+Capital&fecha=2019-2-9&capital=56000";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "25";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"2";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "27";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUISaveButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument2 : HtmlDocument
    {
        
        public UICreateStartGrowDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/Create";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UILasolicituddeJUSTNOWCustom
        {
            get
            {
                if ((this.mUILasolicituddeJUSTNOWCustom == null))
                {
                    this.mUILasolicituddeJUSTNOWCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUILasolicituddeJUSTNOWCustom.SearchProperties["TagName"] = "LI";
                    this.mUILasolicituddeJUSTNOWCustom.SearchProperties["Id"] = null;
                    this.mUILasolicituddeJUSTNOWCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUILasolicituddeJUSTNOWCustom.FilterProperties["Class"] = null;
                    this.mUILasolicituddeJUSTNOWCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUILasolicituddeJUSTNOWCustom.FilterProperties["InnerText"] = "La solicitud de JUST NOW, no puede estar";
                    this.mUILasolicituddeJUSTNOWCustom.FilterProperties["TagInstance"] = "6";
                    this.mUILasolicituddeJUSTNOWCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUILasolicituddeJUSTNOWCustom;
            }
        }
        
        public HtmlCustom UINosehaintroducidocorCustom
        {
            get
            {
                if ((this.mUINosehaintroducidocorCustom == null))
                {
                    this.mUINosehaintroducidocorCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUINosehaintroducidocorCustom.SearchProperties["TagName"] = "LI";
                    this.mUINosehaintroducidocorCustom.SearchProperties["Id"] = null;
                    this.mUINosehaintroducidocorCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUINosehaintroducidocorCustom.FilterProperties["Class"] = null;
                    this.mUINosehaintroducidocorCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUINosehaintroducidocorCustom.FilterProperties["InnerText"] = "No se ha introducido correctamente el pl";
                    this.mUINosehaintroducidocorCustom.FilterProperties["TagInstance"] = "6";
                    this.mUINosehaintroducidocorCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUINosehaintroducidocorCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUILasolicituddeJUSTNOWCustom;
        
        private HtmlCustom mUINosehaintroducidocorCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument3 : HtmlDocument
    {
        
        public UICreateStartGrowDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/Create?IdsToAdd=25";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UISolicitudes0estadosComboBox
        {
            get
            {
                if ((this.mUISolicitudes0estadosComboBox == null))
                {
                    this.mUISolicitudes0estadosComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0estadosComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "Solicitudes_0__estados";
                    this.mUISolicitudes0estadosComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "Solicitudes[0].estados";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].estados\" id=\"Solici";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUISolicitudes0estadosComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0estadosComboBox;
            }
        }
        
        public HtmlComboBox UISolicitudes0ratingComboBox
        {
            get
            {
                if ((this.mUISolicitudes0ratingComboBox == null))
                {
                    this.mUISolicitudes0ratingComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0ratingComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "Solicitudes_0__rating";
                    this.mUISolicitudes0ratingComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "Solicitudes[0].rating";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "6";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].rating\" id=\"Solicit";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUISolicitudes0ratingComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0ratingComboBox;
            }
        }
        
        public HtmlEdit UISolicitudes0interesEdit
        {
            get
            {
                if ((this.mUISolicitudes0interesEdit == null))
                {
                    this.mUISolicitudes0interesEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0interesEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Solicitudes_0__interes";
                    this.mUISolicitudes0interesEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Solicitudes[0].interes";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].interes\" id=\"Solici";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUISolicitudes0interesEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0interesEdit;
            }
        }
        
        public HtmlEdit UISolicitudes0plazoEdit
        {
            get
            {
                if ((this.mUISolicitudes0plazoEdit == null))
                {
                    this.mUISolicitudes0plazoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0plazoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Solicitudes_0__plazo";
                    this.mUISolicitudes0plazoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Solicitudes[0].plazo";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].plazo\" id=\"Solicitu";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUISolicitudes0plazoEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0plazoEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    this.mUICreateButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUISolicitudes0estadosComboBox;
        
        private HtmlComboBox mUISolicitudes0ratingComboBox;
        
        private HtmlEdit mUISolicitudes0interesEdit;
        
        private HtmlEdit mUISolicitudes0plazoEdit;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowDocument2 : HtmlDocument
    {
        
        public UIDetailsStartGrowDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Details";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/Details?ids=15";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISolicitudNombreEstadPane
        {
            get
            {
                if ((this.mUISolicitudNombreEstadPane == null))
                {
                    this.mUISolicitudNombreEstadPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solic";
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUISolicitudNombreEstadPane.WindowTitles.Add("Details - StartGrow");
                    #endregion
                }
                return this.mUISolicitudNombreEstadPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISolicitudNombreEstadPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISeleccionelosproyectDocument6 : HtmlDocument
    {
        
        public UISeleccionelosproyectDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Seleccione los proyectos que vaya a publicar - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/SelectProyectosForSolicitud";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/SelectProyectosForSolicitud?nombreProyecto=PO" +
                "CHOLO+RULES&areasSeleccionada=Transporte&tipoSeleccionado=Crownfunding&tipoSelec" +
                "cionado=Business+Angels&tipoSeleccionado=Venture+Capital&fecha=2019-02-09&capita" +
                "l=100000";
            this.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "26";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"2";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "27";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUISaveButton.WindowTitles.Add("Seleccione los proyectos que vaya a publicar - StartGrow");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument4 : HtmlDocument
    {
        
        public UICreateStartGrowDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/Create?IdsToAdd=26";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UISolicitudes0estadosComboBox
        {
            get
            {
                if ((this.mUISolicitudes0estadosComboBox == null))
                {
                    this.mUISolicitudes0estadosComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0estadosComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "Solicitudes_0__estados";
                    this.mUISolicitudes0estadosComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "Solicitudes[0].estados";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].estados\" id=\"Solici";
                    this.mUISolicitudes0estadosComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUISolicitudes0estadosComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0estadosComboBox;
            }
        }
        
        public HtmlComboBox UISolicitudes0ratingComboBox
        {
            get
            {
                if ((this.mUISolicitudes0ratingComboBox == null))
                {
                    this.mUISolicitudes0ratingComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0ratingComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "Solicitudes_0__rating";
                    this.mUISolicitudes0ratingComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "Solicitudes[0].rating";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "6";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].rating\" id=\"Solicit";
                    this.mUISolicitudes0ratingComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUISolicitudes0ratingComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0ratingComboBox;
            }
        }
        
        public HtmlEdit UISolicitudes0interesEdit
        {
            get
            {
                if ((this.mUISolicitudes0interesEdit == null))
                {
                    this.mUISolicitudes0interesEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0interesEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Solicitudes_0__interes";
                    this.mUISolicitudes0interesEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Solicitudes[0].interes";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].interes\" id=\"Solici";
                    this.mUISolicitudes0interesEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUISolicitudes0interesEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0interesEdit;
            }
        }
        
        public HtmlEdit UISolicitudes0plazoEdit
        {
            get
            {
                if ((this.mUISolicitudes0plazoEdit == null))
                {
                    this.mUISolicitudes0plazoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudes0plazoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Solicitudes_0__plazo";
                    this.mUISolicitudes0plazoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Solicitudes[0].plazo";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Solicitudes[0].plazo\" id=\"Solicitu";
                    this.mUISolicitudes0plazoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUISolicitudes0plazoEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUISolicitudes0plazoEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
                    this.mUICreateButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUISolicitudes0estadosComboBox;
        
        private HtmlComboBox mUISolicitudes0ratingComboBox;
        
        private HtmlEdit mUISolicitudes0interesEdit;
        
        private HtmlEdit mUISolicitudes0plazoEdit;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowDocument3 : HtmlDocument
    {
        
        public UIDetailsStartGrowDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Solicitudes/Details";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Solicitudes/Details?ids=20";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISolicitudNombreEstadPane
        {
            get
            {
                if ((this.mUISolicitudNombreEstadPane == null))
                {
                    this.mUISolicitudNombreEstadPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISolicitudNombreEstadPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Solicitud\r\n\r\n\r\n\r\nNombre \r\n\r\nEstado Solic";
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUISolicitudNombreEstadPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUISolicitudNombreEstadPane.WindowTitles.Add("Details - StartGrow");
                    #endregion
                }
                return this.mUISolicitudNombreEstadPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISolicitudNombreEstadPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("https://localhost:44358/");
            this.WindowTitles.Add("Home Page - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageStartGrowDocument UIHomePageStartGrowDocument
        {
            get
            {
                if ((this.mUIHomePageStartGrowDocument == null))
                {
                    this.mUIHomePageStartGrowDocument = new UIHomePageStartGrowDocument(this);
                }
                return this.mUIHomePageStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageStartGrowDocument mUIHomePageStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowDocument : HtmlDocument
    {
        
        public UIHomePageStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/";
            this.WindowTitles.Add("Home Page - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIPublicarProyectoHyperlink
        {
            get
            {
                if ((this.mUIPublicarProyectoHyperlink == null))
                {
                    this.mUIPublicarProyectoHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIPublicarProyectoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPublicarProyectoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPublicarProyectoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPublicarProyectoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Publicar Proyecto";
                    this.mUIPublicarProyectoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Solicitudes/SelectProyectosForSolicitud";
                    this.mUIPublicarProyectoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPublicarProyectoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44358/Solicitudes/SelectProyectosForSolicitud";
                    this.mUIPublicarProyectoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPublicarProyectoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Solicitudes/SelectProyectosForSol";
                    this.mUIPublicarProyectoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIPublicarProyectoHyperlink.WindowTitles.Add("Home Page - StartGrow");
                    #endregion
                }
                return this.mUIPublicarProyectoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIPublicarProyectoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowInternWindow1 : BrowserWindow
    {
        
        public UILoginStartGrowInternWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILoginStartGrowDocument2 UILoginStartGrowDocument
        {
            get
            {
                if ((this.mUILoginStartGrowDocument == null))
                {
                    this.mUILoginStartGrowDocument = new UILoginStartGrowDocument2(this);
                }
                return this.mUILoginStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UILoginStartGrowDocument2 mUILoginStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UILoginStartGrowDocument2 : HtmlDocument
    {
        
        public UILoginStartGrowDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Account/Login?ReturnUrl=%2FSolicitudes%2FSelectProyectosF" +
                "orSolicitud";
            this.WindowTitles.Add("Log in - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - StartGrow");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILoginButton;
        #endregion
    }
}
