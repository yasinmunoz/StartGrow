// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas automatizadas de IU.
//      Versión: 15.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace StartGrow.UIT.UC1_Invertir.UC_InvertirUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public partial class UC_InvertirUIMap
    {
        
        /// <summary>
        /// Acceder a la aplicacion
        /// </summary>
        public void AccederAplicacion()
        {
            #region Variable Declarations
            BrowserWindow uIGoogleInternetExplorWindow = this.UIGoogleInternetExplorWindow;
            WinButton uIDropbox634107ActualiButton = this.UIÁreadenotificacióndeWindow.UIÁreadenotificacióndeToolBar.UIDropbox634107ActualiButton;
            #endregion

            // No se grabó la última acción del mouse.

            // Ir a página web 'https://localhost:44358/'
            uIGoogleInternetExplorWindow.NavigateToUrl(new System.Uri(this.AccederAplicacionParams.UIGoogleInternetExplorWindowUrl));

            // Clic 'Dropbox 63.4.107Actualizado' botón
            Mouse.Click(uIDropbox634107ActualiButton, new Point(16, 39));
        }
        
        /// <summary>
        /// AssertAccederAplicacion: use 'AssertAccederAplicacionExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertAccederAplicacion()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UILoginHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Log in' vínculo es igual a 'Log in'
            Assert.AreEqual(this.AssertAccederAplicacionExpectedValues.UILoginHyperlinkInnerText, uILoginHyperlink.InnerText, "No sale botón de login");
        }
        
        /// <summary>
        /// InversionCompleta: use 'InversionCompletaParams' para pasar parámetros a este método.
        /// </summary>
        public void InversionCompleta()
        {
            #region Variable Declarations
            HtmlCheckBox uIIdsToAddCheckBox = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox;
            HtmlDocument uISelectProyectosForInDocument = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlComboBox uIInversiones0TiposInvComboBox = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIInversiones0TiposInvComboBox;
            HtmlEdit uIInversiones0CuotaEdit = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.InversionCompletaParams.UIIdsToAddCheckBoxChecked;

            // Mover  'SelectProyectosForInversion - StartGrow' documento
            Mouse.StartDragging(uISelectProyectosForInDocument, new Point(1365, 202));
            Mouse.StopDragging(uISelectProyectosForInDocument, 0, 469);

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(22, 9));

            // Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
            uIInversiones0TiposInvComboBox.SelectedItem = this.InversionCompletaParams.UIInversiones0TiposInvComboBoxSelectedItem;

            // Escribir '500' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.InversionCompletaParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(52, 17));
        }
        
        /// <summary>
        /// ListarProyectos
        /// </summary>
        public void ListarProyectos()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(17, 19));
        }
        
        /// <summary>
        /// AssertListarProyectos: use 'AssertListarProyectosExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void AssertListarProyectos()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            #endregion

            // Compruebe que la propiedad 'InnerText' de 'Invertir' vínculo es igual a 'Invertir'
            Assert.AreEqual(this.AssertListarProyectosExpectedValues.UIInvertirHyperlinkInnerText, uIInvertirHyperlink.InnerText);
        }
        
        /// <summary>
        /// El inversor realiza la inversión correctamente sin utilizar el filtro.
        /// </summary>
        public void InversionRealizadaSinFiltro()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox1 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox1;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlComboBox uIInversiones0TiposInvComboBox = this.UIHomePageStartGrowIntWindow.UICreateStartGrowDocument.UIInversiones0TiposInvComboBox;
            HtmlEdit uIInversiones0CuotaEdit = this.UIHomePageStartGrowIntWindow.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UIHomePageStartGrowIntWindow.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(33, 31));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox1.Checked = this.InversionRealizadaSinFiltroParams.UIIdsToAddCheckBox1Checked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(10, 11));

            // Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
            uIInversiones0TiposInvComboBox.SelectedItem = this.InversionRealizadaSinFiltroParams.UIInversiones0TiposInvComboBoxSelectedItem;

            // Escribir '750' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.InversionRealizadaSinFiltroParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(26, 12));
        }
        
        /// <summary>
        /// El inversor realiza la inversión correctamente sin utilizar el filtro.
        /// </summary>
        public void AssertInversionRealizadaSinFiltro()
        {
            #region Variable Declarations
            HtmlDiv uIAreaspositionabsolutPane = this.UIDetailsStartGrowInteWindow.UIDetailsStartGrowDocument.UIAreaspositionabsolutPane;
            #endregion

            // Compruebe que la propiedad 'TagName' de '.areas { position: absolute; top: 150px;' panel es igual a 'DIV'
            Assert.AreEqual(this.AssertInversionRealizadaSinFiltroExpectedValues.UIAreaspositionabsolutPaneTagName, uIAreaspositionabsolutPane.TagName);
        }
        
        /// <summary>
        /// El inversor realiza la inversión correctamente haciendo un filtrado.
        /// </summary>
        public void InversionRealizadaConFiltro()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIds_areasCheckBox = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_areasCheckBox;
            HtmlCheckBox uIIds_ratingCheckBox = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_ratingCheckBox;
            HtmlCheckBox uIIds_tiposInversionesCheckBox = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_tiposInversionesCheckBox;
            HtmlEdit uIInversiónMínimaEdit = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIInversiónMínimaEdit;
            HtmlEdit uIInterésEdit = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIInterésEdit;
            HtmlEdit uIPlazoEdit = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIPlazoEdit;
            HtmlInputButton uIFiltrarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIFiltrarButton;
            HtmlCheckBox uIIdsToAddCheckBox = this.UIHomePageStartGrowIntWindow1.UISelectProyectosForInDocument1.UIIdsToAddCheckBox;
            HtmlButton uIContinuarButton = this.UIHomePageStartGrowIntWindow1.UISelectProyectosForInDocument1.UIContinuarButton;
            HtmlComboBox uIInversiones0TiposInvComboBox = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIInversiones0TiposInvComboBox;
            HtmlEdit uIInversiones0CuotaEdit = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(38, 22));

            // Seleccionar casilla 'ids_areas'
            uIIds_areasCheckBox.Checked = this.InversionRealizadaConFiltroParams.UIIds_areasCheckBoxChecked;

            // Seleccionar casilla 'ids_rating'
            uIIds_ratingCheckBox.Checked = this.InversionRealizadaConFiltroParams.UIIds_ratingCheckBoxChecked;

            // Seleccionar casilla 'ids_tiposInversiones'
            uIIds_tiposInversionesCheckBox.Checked = this.InversionRealizadaConFiltroParams.UIIds_tiposInversionesCheckBoxChecked;

            // Escribir '25' en cuadro de texto 'Inversión Mínima'
            uIInversiónMínimaEdit.Text = this.InversionRealizadaConFiltroParams.UIInversiónMínimaEditText;

            // Escribir '5' en cuadro de texto 'Interés'
            uIInterésEdit.Text = this.InversionRealizadaConFiltroParams.UIInterésEditText;

            // Escribir '10' en cuadro de texto 'Plazo'
            uIPlazoEdit.Text = this.InversionRealizadaConFiltroParams.UIPlazoEditText;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(29, 7));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.InversionRealizadaConFiltroParams.UIIdsToAddCheckBoxChecked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(45, 18));

            // Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
            uIInversiones0TiposInvComboBox.SelectedItem = this.InversionRealizadaConFiltroParams.UIInversiones0TiposInvComboBoxSelectedItem;

            // Escribir '500' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.InversionRealizadaConFiltroParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(36, 8));
        }
        
        /// <summary>
        /// El inversor realiza la inversión correctamente haciendo un filtrado.
        /// </summary>
        public void AssertInversionRealizadaConFiltro()
        {
            #region Variable Declarations
            HtmlDiv uIAreaspositionabsolutPane = this.UIDetailsStartGrowInteWindow1.UIDetailsStartGrowDocument.UIAreaspositionabsolutPane;
            #endregion

            // Compruebe que la propiedad 'TagName' de '.areas { position: absolute; top: 150px;' panel es igual a 'DIV'
            Assert.AreEqual(this.AssertInversionRealizadaConFiltroExpectedValues.UIAreaspositionabsolutPaneTagName, uIAreaspositionabsolutPane.TagName);
        }
        
        /// <summary>
        /// El inversor realiza un filtrado pero no se encuentran inversiones.
        /// </summary>
        public void NoEncuentraProyectosConFiltro()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIds_areasCheckBox1 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_areasCheckBox1;
            HtmlCheckBox uIIds_ratingCheckBox1 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_ratingCheckBox1;
            HtmlCheckBox uIIds_tiposInversionesCheckBox1 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_tiposInversionesCheckBox1;
            HtmlCheckBox uIIds_tiposInversionesCheckBox = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIds_tiposInversionesCheckBox;
            HtmlEdit uIInversiónMínimaEdit = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIInversiónMínimaEdit;
            HtmlEdit uIInterésEdit = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIInterésEdit;
            HtmlEdit uIPlazoEdit = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIPlazoEdit;
            HtmlInputButton uIFiltrarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIFiltrarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(37, 21));

            // Seleccionar casilla 'ids_areas'
            uIIds_areasCheckBox1.Checked = this.NoEncuentraProyectosConFiltroParams.UIIds_areasCheckBox1Checked;

            // Seleccionar casilla 'ids_rating'
            uIIds_ratingCheckBox1.Checked = this.NoEncuentraProyectosConFiltroParams.UIIds_ratingCheckBox1Checked;

            // Seleccionar casilla 'ids_tiposInversiones'
            uIIds_tiposInversionesCheckBox1.Checked = this.NoEncuentraProyectosConFiltroParams.UIIds_tiposInversionesCheckBox1Checked;

            // Seleccionar casilla 'ids_tiposInversiones'
            uIIds_tiposInversionesCheckBox.Checked = this.NoEncuentraProyectosConFiltroParams.UIIds_tiposInversionesCheckBoxChecked;

            // Escribir '400' en cuadro de texto 'Inversión Mínima'
            uIInversiónMínimaEdit.Text = this.NoEncuentraProyectosConFiltroParams.UIInversiónMínimaEditText;

            // Escribir '6' en cuadro de texto 'Interés'
            uIInterésEdit.Text = this.NoEncuentraProyectosConFiltroParams.UIInterésEditText;

            // Escribir '15' en cuadro de texto 'Plazo'
            uIPlazoEdit.Text = this.NoEncuentraProyectosConFiltroParams.UIPlazoEditText;

            // Clic 'Filtrar' botón
            Mouse.Click(uIFiltrarButton, new Point(26, 11));
        }
        
        /// <summary>
        /// El inversor realiza un filtrado pero no se encuentran inversiones.
        /// </summary>
        public void AssertNoEncuentraProyectosConFiltro()
        {
            #region Variable Declarations
            HtmlDiv uIAreaspositionabsolutPane = this.UISelectProyectosForInWindow1.UISelectProyectosForInDocument.UIAreaspositionabsolutPane;
            #endregion

            // Compruebe que la propiedad 'TagName' de '.areas { position: absolute; top: 150px;' panel es igual a 'DIV'
            Assert.AreEqual(this.AssertNoEncuentraProyectosConFiltroExpectedValues.UIAreaspositionabsolutPaneTagName, uIAreaspositionabsolutPane.TagName);
        }
        
        /// <summary>
        /// El Inversor introduce una cantidad inferior a la mínima.
        /// </summary>
        public void CuotaInferiorInvMin()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox2 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox2;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlComboBox uIInversiones0TiposInvComboBox = this.UIHomePageStartGrowIntWindow2.UICreateStartGrowDocument.UIInversiones0TiposInvComboBox;
            HtmlEdit uIInversiones0CuotaEdit = this.UIHomePageStartGrowIntWindow2.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UIHomePageStartGrowIntWindow2.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(31, 28));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox2.Checked = this.CuotaInferiorInvMinParams.UIIdsToAddCheckBox2Checked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(30, 21));

            // Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
            uIInversiones0TiposInvComboBox.SelectedItem = this.CuotaInferiorInvMinParams.UIInversiones0TiposInvComboBoxSelectedItem;

            // Escribir '150' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.CuotaInferiorInvMinParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(62, 14));
        }
        
        /// <summary>
        /// El Inversor introduce una cantidad inferior a la mínima.
        /// </summary>
        public void AssertCuotaInferiorInvMin()
        {
            #region Variable Declarations
            HtmlCustom uIHaintroducidounacuotCustom = this.UICreateStartGrowInterWindow.UICreateStartGrowDocument.UIHaintroducidounacuotCustom;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'Ha introducido una cuota incorrecta en G' control personalizado es igual a 'LI'
            Assert.AreEqual(this.AssertCuotaInferiorInvMinExpectedValues.UIHaintroducidounacuotCustomTagName, uIHaintroducidounacuotCustom.TagName);
        }
        
        /// <summary>
        /// El Inversor introduce una cantidad superior a la del monedero.
        /// </summary>
        public void CuotaSuperiorMonedero()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox3 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox3;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlComboBox uIInversiones0TiposInvComboBox = this.UIHomePageStartGrowIntWindow3.UICreateStartGrowDocument.UIInversiones0TiposInvComboBox;
            HtmlEdit uIInversiones0CuotaEdit = this.UIHomePageStartGrowIntWindow3.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UIHomePageStartGrowIntWindow3.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(35, 24));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox3.Checked = this.CuotaSuperiorMonederoParams.UIIdsToAddCheckBox3Checked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(40, 13));

            // Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
            uIInversiones0TiposInvComboBox.SelectedItem = this.CuotaSuperiorMonederoParams.UIInversiones0TiposInvComboBoxSelectedItem;

            // Escribir '80000' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.CuotaSuperiorMonederoParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(60, 12));
        }
        
        /// <summary>
        /// El Inversor introduce una cantidad superior a la del monedero.
        /// </summary>
        public void AssertCuotaSuperiorMonedero()
        {
            #region Variable Declarations
            HtmlCustom uIHaintroducidounacuotCustom1 = this.UICreateStartGrowInterWindow.UICreateStartGrowDocument.UIHaintroducidounacuotCustom1;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'Ha introducido una cuota incorrecta en S' control personalizado es igual a 'LI'
            Assert.AreEqual(this.AssertCuotaSuperiorMonederoExpectedValues.UIHaintroducidounacuotCustom1TagName, uIHaintroducidounacuotCustom1.TagName);
        }
        
        /// <summary>
        /// El inversor introduce una cantidad válida y no selecciona un tipo de inversión.
        /// </summary>
        public void SinTipoInversionSeleccionado()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlEdit uIInversiones0CuotaEdit = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UISelectProyectosForInWindow.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(17, 21));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox.Checked = this.SinTipoInversionSeleccionadoParams.UIIdsToAddCheckBoxChecked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(47, 12));

            // Escribir '300' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.SinTipoInversionSeleccionadoParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(7, 18));
        }
        
        /// <summary>
        /// El inversor introduce una cantidad válida y no selecciona un tipo de inversión.
        /// </summary>
        public void AssertSinTipoInversionSeleccionado()
        {
            #region Variable Declarations
            HtmlCustom uINohaseleccionadountiCustom = this.UICreateStartGrowInterWindow.UICreateStartGrowDocument.UINohaseleccionadountiCustom;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'No ha seleccionado un tipo de inversión' control personalizado es igual a 'LI'
            Assert.AreEqual(this.AssertSinTipoInversionSeleccionadoExpectedValues.UINohaseleccionadountiCustomTagName, uINohaseleccionadountiCustom.TagName);
        }
        
        /// <summary>
        /// El Inversor introduce una cantidad inferior a la mínima y no selecciona un tipo de inversión.
        /// </summary>
        public void CuotaInferiorInvMinSinTipo()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox4 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox4;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlEdit uIInversiones0CuotaEdit = this.UIHomePageStartGrowIntWindow4.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlDiv uIAreaspositionabsolutPane = this.UIHomePageStartGrowIntWindow4.UICreateStartGrowDocument.UIAreaspositionabsolutPane;
            HtmlInputButton uIContinuarButton1 = this.UIHomePageStartGrowIntWindow4.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(30, 20));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox4.Checked = this.CuotaInferiorInvMinSinTipoParams.UIIdsToAddCheckBox4Checked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(17, 27));

            // Escribir '3' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.CuotaInferiorInvMinSinTipoParams.UIInversiones0CuotaEditText;

            // Clic '.areas { position: absolute; top: 150px;' panel
            Mouse.Click(uIAreaspositionabsolutPane, new Point(722, 379));

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(25, 3));
        }
        
        /// <summary>
        /// El Inversor introduce una cantidad inferior a la mínima y no selecciona un tipo de inversión.
        /// </summary>
        public void AssertCuotaInferiorInvMinSinTipo()
        {
            #region Variable Declarations
            HtmlCustom uICuotayTipodeInversióCustom = this.UICreateStartGrowInterWindow.UICreateStartGrowDocument.UICuotayTipodeInversióCustom;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'Cuota y Tipo de Inversión incorrectos en' control personalizado es igual a 'LI'
            Assert.AreEqual(this.AssertCuotaInferiorInvMinSinTipoExpectedValues.UICuotayTipodeInversióCustomTagName, uICuotayTipodeInversióCustom.TagName);
        }
        
        /// <summary>
        /// El inversor introduce una cantidad superior a lo disponible en monedero y no selecciona un tipo de inversión.
        /// </summary>
        public void CuotaSuperiorMonederoSinTipo()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox4 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox4;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlEdit uIInversiones0CuotaEdit = this.UIHomePageStartGrowIntWindow4.UICreateStartGrowDocument.UIInversiones0CuotaEdit;
            HtmlInputButton uIContinuarButton1 = this.UIHomePageStartGrowIntWindow4.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(25, 22));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox4.Checked = this.CuotaSuperiorMonederoSinTipoParams.UIIdsToAddCheckBox4Checked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(45, 17));

            // Escribir '90000' en cuadro de texto 'inversiones[0].Cuota'
            uIInversiones0CuotaEdit.Text = this.CuotaSuperiorMonederoSinTipoParams.UIInversiones0CuotaEditText;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(37, 6));
        }
        
        /// <summary>
        /// El inversor introduce una cantidad superior a lo disponible en monedero y no selecciona un tipo de inversión.
        /// </summary>
        public void AssertCuotaSuperiorMonederoSinTipo()
        {
            #region Variable Declarations
            HtmlCustom uICuotayTipodeInversióCustom = this.UICreateStartGrowInterWindow.UICreateStartGrowDocument.UICuotayTipodeInversióCustom;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'Cuota y Tipo de Inversión incorrectos en' control personalizado es igual a 'LI'
            Assert.AreEqual(this.AssertCuotaSuperiorMonederoSinTipoExpectedValues.UICuotayTipodeInversióCustomTagName, uICuotayTipodeInversióCustom.TagName);
        }
        
        /// <summary>
        /// El inversor selecciona un proyecto y no introduce ninguna cantidad ni selecciona un tipo de inversión.
        /// </summary>
        public void SinCuotaSinTipo()
        {
            #region Variable Declarations
            HtmlHyperlink uIInvertirHyperlink = this.UIGoogleInternetExplorWindow.UIHomePageStartGrowDocument.UIInvertirHyperlink;
            HtmlCheckBox uIIdsToAddCheckBox4 = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIIdsToAddCheckBox4;
            HtmlButton uIContinuarButton = this.UISelectProyectosForInWindow.UISelectProyectosForInDocument.UIContinuarButton;
            HtmlInputButton uIContinuarButton1 = this.UIHomePageStartGrowIntWindow4.UICreateStartGrowDocument.UIContinuarButton;
            #endregion

            // Clic 'Invertir' vínculo
            Mouse.Click(uIInvertirHyperlink, new Point(33, 13));

            // Seleccionar casilla 'IdsToAdd'
            uIIdsToAddCheckBox4.Checked = this.SinCuotaSinTipoParams.UIIdsToAddCheckBox4Checked;

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton, new Point(39, 22));

            // Clic 'Continuar' botón
            Mouse.Click(uIContinuarButton1, new Point(25, 19));
        }
        
        /// <summary>
        /// El inversor selecciona un proyecto y no introduce ninguna cantidad ni selecciona un tipo de inversión.
        /// </summary>
        public void AssertSinCuotaSinTipo()
        {
            #region Variable Declarations
            HtmlCustom uICuotayTipodeInversióCustom = this.UICreateStartGrowInterWindow.UICreateStartGrowDocument.UICuotayTipodeInversióCustom;
            #endregion

            // Compruebe que la propiedad 'TagName' de 'Cuota y Tipo de Inversión incorrectos en' control personalizado es igual a 'LI'
            Assert.AreEqual(this.AssertSinCuotaSinTipoExpectedValues.UICuotayTipodeInversióCustomTagName, uICuotayTipodeInversióCustom.TagName);
        }
        
        #region Properties
        public virtual AccederAplicacionParams AccederAplicacionParams
        {
            get
            {
                if ((this.mAccederAplicacionParams == null))
                {
                    this.mAccederAplicacionParams = new AccederAplicacionParams();
                }
                return this.mAccederAplicacionParams;
            }
        }
        
        public virtual AssertAccederAplicacionExpectedValues AssertAccederAplicacionExpectedValues
        {
            get
            {
                if ((this.mAssertAccederAplicacionExpectedValues == null))
                {
                    this.mAssertAccederAplicacionExpectedValues = new AssertAccederAplicacionExpectedValues();
                }
                return this.mAssertAccederAplicacionExpectedValues;
            }
        }
        
        public virtual InversionCompletaParams InversionCompletaParams
        {
            get
            {
                if ((this.mInversionCompletaParams == null))
                {
                    this.mInversionCompletaParams = new InversionCompletaParams();
                }
                return this.mInversionCompletaParams;
            }
        }
        
        public virtual AssertListarProyectosExpectedValues AssertListarProyectosExpectedValues
        {
            get
            {
                if ((this.mAssertListarProyectosExpectedValues == null))
                {
                    this.mAssertListarProyectosExpectedValues = new AssertListarProyectosExpectedValues();
                }
                return this.mAssertListarProyectosExpectedValues;
            }
        }
        
        public virtual InversionRealizadaSinFiltroParams InversionRealizadaSinFiltroParams
        {
            get
            {
                if ((this.mInversionRealizadaSinFiltroParams == null))
                {
                    this.mInversionRealizadaSinFiltroParams = new InversionRealizadaSinFiltroParams();
                }
                return this.mInversionRealizadaSinFiltroParams;
            }
        }
        
        public virtual AssertInversionRealizadaSinFiltroExpectedValues AssertInversionRealizadaSinFiltroExpectedValues
        {
            get
            {
                if ((this.mAssertInversionRealizadaSinFiltroExpectedValues == null))
                {
                    this.mAssertInversionRealizadaSinFiltroExpectedValues = new AssertInversionRealizadaSinFiltroExpectedValues();
                }
                return this.mAssertInversionRealizadaSinFiltroExpectedValues;
            }
        }
        
        public virtual InversionRealizadaConFiltroParams InversionRealizadaConFiltroParams
        {
            get
            {
                if ((this.mInversionRealizadaConFiltroParams == null))
                {
                    this.mInversionRealizadaConFiltroParams = new InversionRealizadaConFiltroParams();
                }
                return this.mInversionRealizadaConFiltroParams;
            }
        }
        
        public virtual AssertInversionRealizadaConFiltroExpectedValues AssertInversionRealizadaConFiltroExpectedValues
        {
            get
            {
                if ((this.mAssertInversionRealizadaConFiltroExpectedValues == null))
                {
                    this.mAssertInversionRealizadaConFiltroExpectedValues = new AssertInversionRealizadaConFiltroExpectedValues();
                }
                return this.mAssertInversionRealizadaConFiltroExpectedValues;
            }
        }
        
        public virtual NoEncuentraProyectosConFiltroParams NoEncuentraProyectosConFiltroParams
        {
            get
            {
                if ((this.mNoEncuentraProyectosConFiltroParams == null))
                {
                    this.mNoEncuentraProyectosConFiltroParams = new NoEncuentraProyectosConFiltroParams();
                }
                return this.mNoEncuentraProyectosConFiltroParams;
            }
        }
        
        public virtual AssertNoEncuentraProyectosConFiltroExpectedValues AssertNoEncuentraProyectosConFiltroExpectedValues
        {
            get
            {
                if ((this.mAssertNoEncuentraProyectosConFiltroExpectedValues == null))
                {
                    this.mAssertNoEncuentraProyectosConFiltroExpectedValues = new AssertNoEncuentraProyectosConFiltroExpectedValues();
                }
                return this.mAssertNoEncuentraProyectosConFiltroExpectedValues;
            }
        }
        
        public virtual CuotaInferiorInvMinParams CuotaInferiorInvMinParams
        {
            get
            {
                if ((this.mCuotaInferiorInvMinParams == null))
                {
                    this.mCuotaInferiorInvMinParams = new CuotaInferiorInvMinParams();
                }
                return this.mCuotaInferiorInvMinParams;
            }
        }
        
        public virtual AssertCuotaInferiorInvMinExpectedValues AssertCuotaInferiorInvMinExpectedValues
        {
            get
            {
                if ((this.mAssertCuotaInferiorInvMinExpectedValues == null))
                {
                    this.mAssertCuotaInferiorInvMinExpectedValues = new AssertCuotaInferiorInvMinExpectedValues();
                }
                return this.mAssertCuotaInferiorInvMinExpectedValues;
            }
        }
        
        public virtual CuotaSuperiorMonederoParams CuotaSuperiorMonederoParams
        {
            get
            {
                if ((this.mCuotaSuperiorMonederoParams == null))
                {
                    this.mCuotaSuperiorMonederoParams = new CuotaSuperiorMonederoParams();
                }
                return this.mCuotaSuperiorMonederoParams;
            }
        }
        
        public virtual AssertCuotaSuperiorMonederoExpectedValues AssertCuotaSuperiorMonederoExpectedValues
        {
            get
            {
                if ((this.mAssertCuotaSuperiorMonederoExpectedValues == null))
                {
                    this.mAssertCuotaSuperiorMonederoExpectedValues = new AssertCuotaSuperiorMonederoExpectedValues();
                }
                return this.mAssertCuotaSuperiorMonederoExpectedValues;
            }
        }
        
        public virtual SinTipoInversionSeleccionadoParams SinTipoInversionSeleccionadoParams
        {
            get
            {
                if ((this.mSinTipoInversionSeleccionadoParams == null))
                {
                    this.mSinTipoInversionSeleccionadoParams = new SinTipoInversionSeleccionadoParams();
                }
                return this.mSinTipoInversionSeleccionadoParams;
            }
        }
        
        public virtual AssertSinTipoInversionSeleccionadoExpectedValues AssertSinTipoInversionSeleccionadoExpectedValues
        {
            get
            {
                if ((this.mAssertSinTipoInversionSeleccionadoExpectedValues == null))
                {
                    this.mAssertSinTipoInversionSeleccionadoExpectedValues = new AssertSinTipoInversionSeleccionadoExpectedValues();
                }
                return this.mAssertSinTipoInversionSeleccionadoExpectedValues;
            }
        }
        
        public virtual CuotaInferiorInvMinSinTipoParams CuotaInferiorInvMinSinTipoParams
        {
            get
            {
                if ((this.mCuotaInferiorInvMinSinTipoParams == null))
                {
                    this.mCuotaInferiorInvMinSinTipoParams = new CuotaInferiorInvMinSinTipoParams();
                }
                return this.mCuotaInferiorInvMinSinTipoParams;
            }
        }
        
        public virtual AssertCuotaInferiorInvMinSinTipoExpectedValues AssertCuotaInferiorInvMinSinTipoExpectedValues
        {
            get
            {
                if ((this.mAssertCuotaInferiorInvMinSinTipoExpectedValues == null))
                {
                    this.mAssertCuotaInferiorInvMinSinTipoExpectedValues = new AssertCuotaInferiorInvMinSinTipoExpectedValues();
                }
                return this.mAssertCuotaInferiorInvMinSinTipoExpectedValues;
            }
        }
        
        public virtual CuotaSuperiorMonederoSinTipoParams CuotaSuperiorMonederoSinTipoParams
        {
            get
            {
                if ((this.mCuotaSuperiorMonederoSinTipoParams == null))
                {
                    this.mCuotaSuperiorMonederoSinTipoParams = new CuotaSuperiorMonederoSinTipoParams();
                }
                return this.mCuotaSuperiorMonederoSinTipoParams;
            }
        }
        
        public virtual AssertCuotaSuperiorMonederoSinTipoExpectedValues AssertCuotaSuperiorMonederoSinTipoExpectedValues
        {
            get
            {
                if ((this.mAssertCuotaSuperiorMonederoSinTipoExpectedValues == null))
                {
                    this.mAssertCuotaSuperiorMonederoSinTipoExpectedValues = new AssertCuotaSuperiorMonederoSinTipoExpectedValues();
                }
                return this.mAssertCuotaSuperiorMonederoSinTipoExpectedValues;
            }
        }
        
        public virtual SinCuotaSinTipoParams SinCuotaSinTipoParams
        {
            get
            {
                if ((this.mSinCuotaSinTipoParams == null))
                {
                    this.mSinCuotaSinTipoParams = new SinCuotaSinTipoParams();
                }
                return this.mSinCuotaSinTipoParams;
            }
        }
        
        public virtual AssertSinCuotaSinTipoExpectedValues AssertSinCuotaSinTipoExpectedValues
        {
            get
            {
                if ((this.mAssertSinCuotaSinTipoExpectedValues == null))
                {
                    this.mAssertSinCuotaSinTipoExpectedValues = new AssertSinCuotaSinTipoExpectedValues();
                }
                return this.mAssertSinCuotaSinTipoExpectedValues;
            }
        }
        
        public UIGoogleInternetExplorWindow UIGoogleInternetExplorWindow
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow == null))
                {
                    this.mUIGoogleInternetExplorWindow = new UIGoogleInternetExplorWindow();
                }
                return this.mUIGoogleInternetExplorWindow;
            }
        }
        
        public UIÁreadenotificacióndeWindow UIÁreadenotificacióndeWindow
        {
            get
            {
                if ((this.mUIÁreadenotificacióndeWindow == null))
                {
                    this.mUIÁreadenotificacióndeWindow = new UIÁreadenotificacióndeWindow();
                }
                return this.mUIÁreadenotificacióndeWindow;
            }
        }
        
        public UISelectProyectosForInWindow UISelectProyectosForInWindow
        {
            get
            {
                if ((this.mUISelectProyectosForInWindow == null))
                {
                    this.mUISelectProyectosForInWindow = new UISelectProyectosForInWindow();
                }
                return this.mUISelectProyectosForInWindow;
            }
        }
        
        public UIHomePageStartGrowIntWindow UIHomePageStartGrowIntWindow
        {
            get
            {
                if ((this.mUIHomePageStartGrowIntWindow == null))
                {
                    this.mUIHomePageStartGrowIntWindow = new UIHomePageStartGrowIntWindow();
                }
                return this.mUIHomePageStartGrowIntWindow;
            }
        }
        
        public UIDetailsStartGrowInteWindow UIDetailsStartGrowInteWindow
        {
            get
            {
                if ((this.mUIDetailsStartGrowInteWindow == null))
                {
                    this.mUIDetailsStartGrowInteWindow = new UIDetailsStartGrowInteWindow();
                }
                return this.mUIDetailsStartGrowInteWindow;
            }
        }
        
        public UIHomePageStartGrowIntWindow1 UIHomePageStartGrowIntWindow1
        {
            get
            {
                if ((this.mUIHomePageStartGrowIntWindow1 == null))
                {
                    this.mUIHomePageStartGrowIntWindow1 = new UIHomePageStartGrowIntWindow1();
                }
                return this.mUIHomePageStartGrowIntWindow1;
            }
        }
        
        public UIDetailsStartGrowInteWindow1 UIDetailsStartGrowInteWindow1
        {
            get
            {
                if ((this.mUIDetailsStartGrowInteWindow1 == null))
                {
                    this.mUIDetailsStartGrowInteWindow1 = new UIDetailsStartGrowInteWindow1();
                }
                return this.mUIDetailsStartGrowInteWindow1;
            }
        }
        
        public UISelectProyectosForInWindow1 UISelectProyectosForInWindow1
        {
            get
            {
                if ((this.mUISelectProyectosForInWindow1 == null))
                {
                    this.mUISelectProyectosForInWindow1 = new UISelectProyectosForInWindow1();
                }
                return this.mUISelectProyectosForInWindow1;
            }
        }
        
        public UIHomePageStartGrowIntWindow2 UIHomePageStartGrowIntWindow2
        {
            get
            {
                if ((this.mUIHomePageStartGrowIntWindow2 == null))
                {
                    this.mUIHomePageStartGrowIntWindow2 = new UIHomePageStartGrowIntWindow2();
                }
                return this.mUIHomePageStartGrowIntWindow2;
            }
        }
        
        public UICreateStartGrowInterWindow UICreateStartGrowInterWindow
        {
            get
            {
                if ((this.mUICreateStartGrowInterWindow == null))
                {
                    this.mUICreateStartGrowInterWindow = new UICreateStartGrowInterWindow();
                }
                return this.mUICreateStartGrowInterWindow;
            }
        }
        
        public UIHomePageStartGrowIntWindow3 UIHomePageStartGrowIntWindow3
        {
            get
            {
                if ((this.mUIHomePageStartGrowIntWindow3 == null))
                {
                    this.mUIHomePageStartGrowIntWindow3 = new UIHomePageStartGrowIntWindow3();
                }
                return this.mUIHomePageStartGrowIntWindow3;
            }
        }
        
        public UIHomePageStartGrowIntWindow4 UIHomePageStartGrowIntWindow4
        {
            get
            {
                if ((this.mUIHomePageStartGrowIntWindow4 == null))
                {
                    this.mUIHomePageStartGrowIntWindow4 = new UIHomePageStartGrowIntWindow4();
                }
                return this.mUIHomePageStartGrowIntWindow4;
            }
        }
        #endregion
        
        #region Fields
        private AccederAplicacionParams mAccederAplicacionParams;
        
        private AssertAccederAplicacionExpectedValues mAssertAccederAplicacionExpectedValues;
        
        private InversionCompletaParams mInversionCompletaParams;
        
        private AssertListarProyectosExpectedValues mAssertListarProyectosExpectedValues;
        
        private InversionRealizadaSinFiltroParams mInversionRealizadaSinFiltroParams;
        
        private AssertInversionRealizadaSinFiltroExpectedValues mAssertInversionRealizadaSinFiltroExpectedValues;
        
        private InversionRealizadaConFiltroParams mInversionRealizadaConFiltroParams;
        
        private AssertInversionRealizadaConFiltroExpectedValues mAssertInversionRealizadaConFiltroExpectedValues;
        
        private NoEncuentraProyectosConFiltroParams mNoEncuentraProyectosConFiltroParams;
        
        private AssertNoEncuentraProyectosConFiltroExpectedValues mAssertNoEncuentraProyectosConFiltroExpectedValues;
        
        private CuotaInferiorInvMinParams mCuotaInferiorInvMinParams;
        
        private AssertCuotaInferiorInvMinExpectedValues mAssertCuotaInferiorInvMinExpectedValues;
        
        private CuotaSuperiorMonederoParams mCuotaSuperiorMonederoParams;
        
        private AssertCuotaSuperiorMonederoExpectedValues mAssertCuotaSuperiorMonederoExpectedValues;
        
        private SinTipoInversionSeleccionadoParams mSinTipoInversionSeleccionadoParams;
        
        private AssertSinTipoInversionSeleccionadoExpectedValues mAssertSinTipoInversionSeleccionadoExpectedValues;
        
        private CuotaInferiorInvMinSinTipoParams mCuotaInferiorInvMinSinTipoParams;
        
        private AssertCuotaInferiorInvMinSinTipoExpectedValues mAssertCuotaInferiorInvMinSinTipoExpectedValues;
        
        private CuotaSuperiorMonederoSinTipoParams mCuotaSuperiorMonederoSinTipoParams;
        
        private AssertCuotaSuperiorMonederoSinTipoExpectedValues mAssertCuotaSuperiorMonederoSinTipoExpectedValues;
        
        private SinCuotaSinTipoParams mSinCuotaSinTipoParams;
        
        private AssertSinCuotaSinTipoExpectedValues mAssertSinCuotaSinTipoExpectedValues;
        
        private UIGoogleInternetExplorWindow mUIGoogleInternetExplorWindow;
        
        private UIÁreadenotificacióndeWindow mUIÁreadenotificacióndeWindow;
        
        private UISelectProyectosForInWindow mUISelectProyectosForInWindow;
        
        private UIHomePageStartGrowIntWindow mUIHomePageStartGrowIntWindow;
        
        private UIDetailsStartGrowInteWindow mUIDetailsStartGrowInteWindow;
        
        private UIHomePageStartGrowIntWindow1 mUIHomePageStartGrowIntWindow1;
        
        private UIDetailsStartGrowInteWindow1 mUIDetailsStartGrowInteWindow1;
        
        private UISelectProyectosForInWindow1 mUISelectProyectosForInWindow1;
        
        private UIHomePageStartGrowIntWindow2 mUIHomePageStartGrowIntWindow2;
        
        private UICreateStartGrowInterWindow mUICreateStartGrowInterWindow;
        
        private UIHomePageStartGrowIntWindow3 mUIHomePageStartGrowIntWindow3;
        
        private UIHomePageStartGrowIntWindow4 mUIHomePageStartGrowIntWindow4;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AccederAplicacion'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AccederAplicacionParams
    {
        
        #region Fields
        /// <summary>
        /// Ir a página web 'https://localhost:44358/'
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "https://localhost:44358/";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertAccederAplicacion'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertAccederAplicacionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Log in' vínculo es igual a 'Log in'
        /// </summary>
        public string UILoginHyperlinkInnerText = "Log in";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InversionCompleta'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class InversionCompletaParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
        /// </summary>
        public string UIInversiones0TiposInvComboBoxSelectedItem = "Crownfunding";
        
        /// <summary>
        /// Escribir '500' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "500";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertListarProyectos'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertListarProyectosExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'InnerText' de 'Invertir' vínculo es igual a 'Invertir'
        /// </summary>
        public string UIInvertirHyperlinkInnerText = "Invertir";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InversionRealizadaSinFiltro'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class InversionRealizadaSinFiltroParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
        /// </summary>
        public string UIInversiones0TiposInvComboBoxSelectedItem = "Crownfunding";
        
        /// <summary>
        /// Escribir '750' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "750";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertInversionRealizadaSinFiltro'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertInversionRealizadaSinFiltroExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de '.areas { position: absolute; top: 150px;' panel es igual a 'DIV'
        /// </summary>
        public string UIAreaspositionabsolutPaneTagName = "DIV";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'InversionRealizadaConFiltro'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class InversionRealizadaConFiltroParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'ids_areas'
        /// </summary>
        public bool UIIds_areasCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'ids_rating'
        /// </summary>
        public bool UIIds_ratingCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar casilla 'ids_tiposInversiones'
        /// </summary>
        public bool UIIds_tiposInversionesCheckBoxChecked = true;
        
        /// <summary>
        /// Escribir '25' en cuadro de texto 'Inversión Mínima'
        /// </summary>
        public string UIInversiónMínimaEditText = "25";
        
        /// <summary>
        /// Escribir '5' en cuadro de texto 'Interés'
        /// </summary>
        public string UIInterésEditText = "5";
        
        /// <summary>
        /// Escribir '10' en cuadro de texto 'Plazo'
        /// </summary>
        public string UIPlazoEditText = "10";
        
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        
        /// <summary>
        /// Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
        /// </summary>
        public string UIInversiones0TiposInvComboBoxSelectedItem = "Crownfunding";
        
        /// <summary>
        /// Escribir '500' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "500";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertInversionRealizadaConFiltro'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertInversionRealizadaConFiltroExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de '.areas { position: absolute; top: 150px;' panel es igual a 'DIV'
        /// </summary>
        public string UIAreaspositionabsolutPaneTagName = "DIV";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'NoEncuentraProyectosConFiltro'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class NoEncuentraProyectosConFiltroParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'ids_areas'
        /// </summary>
        public bool UIIds_areasCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'ids_rating'
        /// </summary>
        public bool UIIds_ratingCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'ids_tiposInversiones'
        /// </summary>
        public bool UIIds_tiposInversionesCheckBox1Checked = true;
        
        /// <summary>
        /// Seleccionar casilla 'ids_tiposInversiones'
        /// </summary>
        public bool UIIds_tiposInversionesCheckBoxChecked = true;
        
        /// <summary>
        /// Escribir '400' en cuadro de texto 'Inversión Mínima'
        /// </summary>
        public string UIInversiónMínimaEditText = "400";
        
        /// <summary>
        /// Escribir '6' en cuadro de texto 'Interés'
        /// </summary>
        public string UIInterésEditText = "6";
        
        /// <summary>
        /// Escribir '15' en cuadro de texto 'Plazo'
        /// </summary>
        public string UIPlazoEditText = "15";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertNoEncuentraProyectosConFiltro'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertNoEncuentraProyectosConFiltroExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de '.areas { position: absolute; top: 150px;' panel es igual a 'DIV'
        /// </summary>
        public string UIAreaspositionabsolutPaneTagName = "DIV";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CuotaInferiorInvMin'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CuotaInferiorInvMinParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox2Checked = true;
        
        /// <summary>
        /// Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
        /// </summary>
        public string UIInversiones0TiposInvComboBoxSelectedItem = "Crownfunding";
        
        /// <summary>
        /// Escribir '150' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "150";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertCuotaInferiorInvMin'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertCuotaInferiorInvMinExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'Ha introducido una cuota incorrecta en G' control personalizado es igual a 'LI'
        /// </summary>
        public string UIHaintroducidounacuotCustomTagName = "LI";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CuotaSuperiorMonedero'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CuotaSuperiorMonederoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox3Checked = true;
        
        /// <summary>
        /// Seleccionar 'Crownfunding' en cuadro combinado 'inversiones[0].TiposInversionSelected'
        /// </summary>
        public string UIInversiones0TiposInvComboBoxSelectedItem = "Crownfunding";
        
        /// <summary>
        /// Escribir '80000' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "80000";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertCuotaSuperiorMonedero'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertCuotaSuperiorMonederoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'Ha introducido una cuota incorrecta en S' control personalizado es igual a 'LI'
        /// </summary>
        public string UIHaintroducidounacuotCustom1TagName = "LI";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SinTipoInversionSeleccionado'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class SinTipoInversionSeleccionadoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBoxChecked = true;
        
        /// <summary>
        /// Escribir '300' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "300";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertSinTipoInversionSeleccionado'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertSinTipoInversionSeleccionadoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'No ha seleccionado un tipo de inversión' control personalizado es igual a 'LI'
        /// </summary>
        public string UINohaseleccionadountiCustomTagName = "LI";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CuotaInferiorInvMinSinTipo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CuotaInferiorInvMinSinTipoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox4Checked = true;
        
        /// <summary>
        /// Escribir '3' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertCuotaInferiorInvMinSinTipo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertCuotaInferiorInvMinSinTipoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'Cuota y Tipo de Inversión incorrectos en' control personalizado es igual a 'LI'
        /// </summary>
        public string UICuotayTipodeInversióCustomTagName = "LI";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'CuotaSuperiorMonederoSinTipo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class CuotaSuperiorMonederoSinTipoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox4Checked = true;
        
        /// <summary>
        /// Escribir '90000' en cuadro de texto 'inversiones[0].Cuota'
        /// </summary>
        public string UIInversiones0CuotaEditText = "90000";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertCuotaSuperiorMonederoSinTipo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertCuotaSuperiorMonederoSinTipoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'Cuota y Tipo de Inversión incorrectos en' control personalizado es igual a 'LI'
        /// </summary>
        public string UICuotayTipodeInversióCustomTagName = "LI";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'SinCuotaSinTipo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class SinCuotaSinTipoParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar casilla 'IdsToAdd'
        /// </summary>
        public bool UIIdsToAddCheckBox4Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'AssertSinCuotaSinTipo'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class AssertSinCuotaSinTipoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'TagName' de 'Cuota y Tipo de Inversión incorrectos en' control personalizado es igual a 'LI'
        /// </summary>
        public string UICuotayTipodeInversióCustomTagName = "LI";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("Home Page - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageStartGrowDocument UIHomePageStartGrowDocument
        {
            get
            {
                if ((this.mUIHomePageStartGrowDocument == null))
                {
                    this.mUIHomePageStartGrowDocument = new UIHomePageStartGrowDocument(this);
                }
                return this.mUIHomePageStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageStartGrowDocument mUIHomePageStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowDocument : HtmlDocument
    {
        
        public UIHomePageStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/";
            this.WindowTitles.Add("Home Page - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44358/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUILoginHyperlink.WindowTitles.Add("Home Page - StartGrow");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public HtmlHyperlink UIInvertirHyperlink
        {
            get
            {
                if ((this.mUIInvertirHyperlink == null))
                {
                    this.mUIInvertirHyperlink = new HtmlHyperlink(this);
                    #region Criterio de búsqueda
                    this.mUIInvertirHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIInvertirHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIInvertirHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIInvertirHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Invertir";
                    this.mUIInvertirHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Inversions/SelectProyectosForInversion";
                    this.mUIInvertirHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIInvertirHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44358/Inversions/SelectProyectosForInversion";
                    this.mUIInvertirHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIInvertirHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Inversions/SelectProyectosForInve";
                    this.mUIInvertirHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIInvertirHyperlink.WindowTitles.Add("Home Page - StartGrow");
                    #endregion
                }
                return this.mUIInvertirHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILoginHyperlink;
        
        private HtmlHyperlink mUIInvertirHyperlink;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIÁreadenotificacióndeWindow : WinWindow
    {
        
        public UIÁreadenotificacióndeWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Área de notificación designada por el usuario";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ToolbarWindow32";
            this.WindowTitles.Add("Área de notificación designada por el usuario");
            #endregion
        }
        
        #region Properties
        public UIÁreadenotificacióndeToolBar UIÁreadenotificacióndeToolBar
        {
            get
            {
                if ((this.mUIÁreadenotificacióndeToolBar == null))
                {
                    this.mUIÁreadenotificacióndeToolBar = new UIÁreadenotificacióndeToolBar(this);
                }
                return this.mUIÁreadenotificacióndeToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIÁreadenotificacióndeToolBar mUIÁreadenotificacióndeToolBar;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIÁreadenotificacióndeToolBar : WinToolBar
    {
        
        public UIÁreadenotificacióndeToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Área de notificación designada por el usuario";
            this.WindowTitles.Add("Área de notificación designada por el usuario");
            #endregion
        }
        
        #region Properties
        public WinButton UIDropbox634107ActualiButton
        {
            get
            {
                if ((this.mUIDropbox634107ActualiButton == null))
                {
                    this.mUIDropbox634107ActualiButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIDropbox634107ActualiButton.SearchProperties[WinButton.PropertyNames.Name] = "Dropbox 63.4.107Actualizado";
                    this.mUIDropbox634107ActualiButton.WindowTitles.Add("Área de notificación designada por el usuario");
                    #endregion
                }
                return this.mUIDropbox634107ActualiButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDropbox634107ActualiButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInWindow : BrowserWindow
    {
        
        public UISelectProyectosForInWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "SelectProyectosForInversion - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            this.WindowTitles.Add("Home Page - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISelectProyectosForInDocument UISelectProyectosForInDocument
        {
            get
            {
                if ((this.mUISelectProyectosForInDocument == null))
                {
                    this.mUISelectProyectosForInDocument = new UISelectProyectosForInDocument(this);
                }
                return this.mUISelectProyectosForInDocument;
            }
        }
        
        public UICreateStartGrowDocument UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISelectProyectosForInDocument mUISelectProyectosForInDocument;
        
        private UICreateStartGrowDocument mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInDocument : HtmlDocument
    {
        
        public UISelectProyectosForInDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SelectProyectosForInversion - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/SelectProyectosForInversion";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/SelectProyectosForInversion";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "1";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"1";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "32";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIContinuarButton.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox1
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox1 == null))
                {
                    this.mUIIdsToAddCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "5";
                    this.mUIIdsToAddCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"5";
                    this.mUIIdsToAddCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "36";
                    this.mUIIdsToAddCheckBox1.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox1;
            }
        }
        
        public HtmlCheckBox UIIds_areasCheckBox
        {
            get
            {
                if ((this.mUIIds_areasCheckBox == null))
                {
                    this.mUIIds_areasCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIds_areasCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIds_areasCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ids_areas";
                    this.mUIIds_areasCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Sanidad";
                    this.mUIIds_areasCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIds_areasCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIds_areasCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIds_areasCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ids_areas\" type=\"checkbox\" value=\"";
                    this.mUIIds_areasCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "2";
                    this.mUIIds_areasCheckBox.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIds_areasCheckBox;
            }
        }
        
        public HtmlCheckBox UIIds_ratingCheckBox
        {
            get
            {
                if ((this.mUIIds_ratingCheckBox == null))
                {
                    this.mUIIds_ratingCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIds_ratingCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIds_ratingCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ids_rating";
                    this.mUIIds_ratingCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "C";
                    this.mUIIds_ratingCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIds_ratingCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIds_ratingCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIds_ratingCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ids_rating\" type=\"checkbox\" value=";
                    this.mUIIds_ratingCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "22";
                    this.mUIIds_ratingCheckBox.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIds_ratingCheckBox;
            }
        }
        
        public HtmlCheckBox UIIds_tiposInversionesCheckBox
        {
            get
            {
                if ((this.mUIIds_tiposInversionesCheckBox == null))
                {
                    this.mUIIds_tiposInversionesCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIds_tiposInversionesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIds_tiposInversionesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ids_tiposInversiones";
                    this.mUIIds_tiposInversionesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Crownfunding";
                    this.mUIIds_tiposInversionesCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIds_tiposInversionesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIds_tiposInversionesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIds_tiposInversionesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ids_tiposInversiones\" type=\"checkb";
                    this.mUIIds_tiposInversionesCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "26";
                    this.mUIIds_tiposInversionesCheckBox.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIds_tiposInversionesCheckBox;
            }
        }
        
        public HtmlEdit UIInversiónMínimaEdit
        {
            get
            {
                if ((this.mUIInversiónMínimaEdit == null))
                {
                    this.mUIInversiónMínimaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiónMínimaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "invMin";
                    this.mUIInversiónMínimaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "invMin";
                    this.mUIInversiónMínimaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Inversión Mínima";
                    this.mUIInversiónMínimaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiónMínimaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiónMínimaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "InvMinima2";
                    this.mUIInversiónMínimaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"invMin\" class=\"InvMinima2\" id=\"inv";
                    this.mUIInversiónMínimaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "28";
                    this.mUIInversiónMínimaEdit.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIInversiónMínimaEdit;
            }
        }
        
        public HtmlEdit UIInterésEdit
        {
            get
            {
                if ((this.mUIInterésEdit == null))
                {
                    this.mUIInterésEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInterésEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "interes";
                    this.mUIInterésEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "interes";
                    this.mUIInterésEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Interés";
                    this.mUIInterésEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInterésEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInterésEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "interes2";
                    this.mUIInterésEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"interes\" class=\"interes2\" id=\"inte";
                    this.mUIInterésEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "29";
                    this.mUIInterésEdit.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIInterésEdit;
            }
        }
        
        public HtmlEdit UIPlazoEdit
        {
            get
            {
                if ((this.mUIPlazoEdit == null))
                {
                    this.mUIPlazoEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIPlazoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "plazo";
                    this.mUIPlazoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "plazo";
                    this.mUIPlazoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Plazo";
                    this.mUIPlazoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPlazoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPlazoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "plazo2";
                    this.mUIPlazoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"plazo\" class=\"plazo2\" id=\"plazo\" t";
                    this.mUIPlazoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "30";
                    this.mUIPlazoEdit.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIPlazoEdit;
            }
        }
        
        public HtmlInputButton UIFiltrarButton
        {
            get
            {
                if ((this.mUIFiltrarButton == null))
                {
                    this.mUIFiltrarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Filtrar";
                    this.mUIFiltrarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "botonFiltro";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"botonFiltro\" type=\"submit\" value=";
                    this.mUIFiltrarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "31";
                    this.mUIFiltrarButton.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIFiltrarButton;
            }
        }
        
        public HtmlCheckBox UIIds_areasCheckBox1
        {
            get
            {
                if ((this.mUIIds_areasCheckBox1 == null))
                {
                    this.mUIIds_areasCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIds_areasCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIds_areasCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ids_areas";
                    this.mUIIds_areasCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Educación";
                    this.mUIIds_areasCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIds_areasCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIds_areasCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIds_areasCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ids_areas\" type=\"checkbox\" value=\"";
                    this.mUIIds_areasCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "4";
                    this.mUIIds_areasCheckBox1.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIds_areasCheckBox1;
            }
        }
        
        public HtmlCheckBox UIIds_ratingCheckBox1
        {
            get
            {
                if ((this.mUIIds_ratingCheckBox1 == null))
                {
                    this.mUIIds_ratingCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIds_ratingCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIds_ratingCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ids_rating";
                    this.mUIIds_ratingCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "A";
                    this.mUIIds_ratingCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIds_ratingCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIds_ratingCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIds_ratingCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ids_rating\" type=\"checkbox\" value=";
                    this.mUIIds_ratingCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "20";
                    this.mUIIds_ratingCheckBox1.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIds_ratingCheckBox1;
            }
        }
        
        public HtmlCheckBox UIIds_tiposInversionesCheckBox1
        {
            get
            {
                if ((this.mUIIds_tiposInversionesCheckBox1 == null))
                {
                    this.mUIIds_tiposInversionesCheckBox1 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIds_tiposInversionesCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIds_tiposInversionesCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "ids_tiposInversiones";
                    this.mUIIds_tiposInversionesCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "Venture Capital";
                    this.mUIIds_tiposInversionesCheckBox1.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIds_tiposInversionesCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIds_tiposInversionesCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIds_tiposInversionesCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"ids_tiposInversiones\" type=\"checkb";
                    this.mUIIds_tiposInversionesCheckBox1.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "27";
                    this.mUIIds_tiposInversionesCheckBox1.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIds_tiposInversionesCheckBox1;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox2
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox2 == null))
                {
                    this.mUIIdsToAddCheckBox2 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "4";
                    this.mUIIdsToAddCheckBox2.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"4";
                    this.mUIIdsToAddCheckBox2.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "35";
                    this.mUIIdsToAddCheckBox2.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox2;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox3
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox3 == null))
                {
                    this.mUIIdsToAddCheckBox3 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "6";
                    this.mUIIdsToAddCheckBox3.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"6";
                    this.mUIIdsToAddCheckBox3.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "37";
                    this.mUIIdsToAddCheckBox3.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox3;
            }
        }
        
        public HtmlCheckBox UIIdsToAddCheckBox4
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox4 == null))
                {
                    this.mUIIdsToAddCheckBox4 = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox4.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox4.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox4.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "3";
                    this.mUIIdsToAddCheckBox4.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox4.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox4.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox4.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"3";
                    this.mUIIdsToAddCheckBox4.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "34";
                    this.mUIIdsToAddCheckBox4.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox4;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlButton mUIContinuarButton;
        
        private HtmlCheckBox mUIIdsToAddCheckBox1;
        
        private HtmlCheckBox mUIIds_areasCheckBox;
        
        private HtmlCheckBox mUIIds_ratingCheckBox;
        
        private HtmlCheckBox mUIIds_tiposInversionesCheckBox;
        
        private HtmlEdit mUIInversiónMínimaEdit;
        
        private HtmlEdit mUIInterésEdit;
        
        private HtmlEdit mUIPlazoEdit;
        
        private HtmlInputButton mUIFiltrarButton;
        
        private HtmlCheckBox mUIIds_areasCheckBox1;
        
        private HtmlCheckBox mUIIds_ratingCheckBox1;
        
        private HtmlCheckBox mUIIds_tiposInversionesCheckBox1;
        
        private HtmlCheckBox mUIIdsToAddCheckBox2;
        
        private HtmlCheckBox mUIIdsToAddCheckBox3;
        
        private HtmlCheckBox mUIIdsToAddCheckBox4;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument : HtmlDocument
    {
        
        public UICreateStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create?IdsToAdd=1";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIInversiones0TiposInvComboBox
        {
            get
            {
                if ((this.mUIInversiones0TiposInvComboBox == null))
                {
                    this.mUIInversiones0TiposInvComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "inversiones_0__TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "inversiones[0].TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "4";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"inversiones[0].TiposInversionSelec";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIInversiones0TiposInvComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0TiposInvComboBox;
            }
        }
        
        public HtmlEdit UIInversiones0CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones0CuotaEdit == null))
                {
                    this.mUIInversiones0CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_0__Cuota";
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[0].Cuota";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[0].Cuota\" id=\"inversio";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones0CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0CuotaEdit;
            }
        }
        
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUIContinuarButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIInversiones0TiposInvComboBox;
        
        private HtmlEdit mUIInversiones0CuotaEdit;
        
        private HtmlInputButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowIntWindow : BrowserWindow
    {
        
        public UIHomePageStartGrowIntWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - StartGrow");
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateStartGrowDocument1 UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument1(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateStartGrowDocument1 mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument1 : HtmlDocument
    {
        
        public UICreateStartGrowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create?IdsToAdd=5";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIInversiones0TiposInvComboBox
        {
            get
            {
                if ((this.mUIInversiones0TiposInvComboBox == null))
                {
                    this.mUIInversiones0TiposInvComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "inversiones_0__TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "inversiones[0].TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"inversiones[0].TiposInversionSelec";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIInversiones0TiposInvComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0TiposInvComboBox;
            }
        }
        
        public HtmlEdit UIInversiones0CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones0CuotaEdit == null))
                {
                    this.mUIInversiones0CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_0__Cuota";
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[0].Cuota";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[0].Cuota\" id=\"inversio";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones0CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0CuotaEdit;
            }
        }
        
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUIContinuarButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIInversiones0TiposInvComboBox;
        
        private HtmlEdit mUIInversiones0CuotaEdit;
        
        private HtmlInputButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowInteWindow : BrowserWindow
    {
        
        public UIDetailsStartGrowInteWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Details - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDetailsStartGrowDocument UIDetailsStartGrowDocument
        {
            get
            {
                if ((this.mUIDetailsStartGrowDocument == null))
                {
                    this.mUIDetailsStartGrowDocument = new UIDetailsStartGrowDocument(this);
                }
                return this.mUIDetailsStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsStartGrowDocument mUIDetailsStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowDocument : HtmlDocument
    {
        
        public UIDetailsStartGrowDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Details";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Details?ids=5";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAreaspositionabsolutPane
        {
            get
            {
                if ((this.mUIAreaspositionabsolutPane == null))
                {
                    this.mUIAreaspositionabsolutPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".areas { position: absolute; top: 150px;";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIAreaspositionabsolutPane.WindowTitles.Add("Details - StartGrow");
                    #endregion
                }
                return this.mUIAreaspositionabsolutPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAreaspositionabsolutPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowIntWindow1 : BrowserWindow
    {
        
        public UIHomePageStartGrowIntWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - StartGrow");
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISelectProyectosForInDocument1 UISelectProyectosForInDocument1
        {
            get
            {
                if ((this.mUISelectProyectosForInDocument1 == null))
                {
                    this.mUISelectProyectosForInDocument1 = new UISelectProyectosForInDocument1(this);
                }
                return this.mUISelectProyectosForInDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UISelectProyectosForInDocument1 mUISelectProyectosForInDocument1;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInDocument1 : HtmlDocument
    {
        
        public UISelectProyectosForInDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SelectProyectosForInversion - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/SelectProyectosForInversion";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/SelectProyectosForInversion?ids_areas=Sanidad&" +
                "ids_rating=C&ids_tiposInversiones=Crownfunding&invMin=25&interes=5&plazo=10";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCheckBox UIIdsToAddCheckBox
        {
            get
            {
                if ((this.mUIIdsToAddCheckBox == null))
                {
                    this.mUIIdsToAddCheckBox = new HtmlCheckBox(this);
                    #region Criterio de búsqueda
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = null;
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IdsToAdd";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "1";
                    this.mUIIdsToAddCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = null;
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "name=\"IdsToAdd\" type=\"checkbox\" value=\"1";
                    this.mUIIdsToAddCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "32";
                    this.mUIIdsToAddCheckBox.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIIdsToAddCheckBox;
            }
        }
        
        public HtmlButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\"";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUIContinuarButton.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCheckBox mUIIdsToAddCheckBox;
        
        private HtmlButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowInteWindow1 : BrowserWindow
    {
        
        public UIDetailsStartGrowInteWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Details - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDetailsStartGrowDocument1 UIDetailsStartGrowDocument
        {
            get
            {
                if ((this.mUIDetailsStartGrowDocument == null))
                {
                    this.mUIDetailsStartGrowDocument = new UIDetailsStartGrowDocument1(this);
                }
                return this.mUIDetailsStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsStartGrowDocument1 mUIDetailsStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIDetailsStartGrowDocument1 : HtmlDocument
    {
        
        public UIDetailsStartGrowDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Details";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Details?ids=8";
            this.WindowTitles.Add("Details - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAreaspositionabsolutPane
        {
            get
            {
                if ((this.mUIAreaspositionabsolutPane == null))
                {
                    this.mUIAreaspositionabsolutPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".areas { position: absolute; top: 150px;";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIAreaspositionabsolutPane.WindowTitles.Add("Details - StartGrow");
                    #endregion
                }
                return this.mUIAreaspositionabsolutPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAreaspositionabsolutPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInWindow1 : BrowserWindow
    {
        
        public UISelectProyectosForInWindow1()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "SelectProyectosForInversion - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UISelectProyectosForInDocument2 UISelectProyectosForInDocument
        {
            get
            {
                if ((this.mUISelectProyectosForInDocument == null))
                {
                    this.mUISelectProyectosForInDocument = new UISelectProyectosForInDocument2(this);
                }
                return this.mUISelectProyectosForInDocument;
            }
        }
        #endregion
        
        #region Fields
        private UISelectProyectosForInDocument2 mUISelectProyectosForInDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelectProyectosForInDocument2 : HtmlDocument
    {
        
        public UISelectProyectosForInDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SelectProyectosForInversion - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/SelectProyectosForInversion";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/SelectProyectosForInversion?ids_areas=Educaci%" +
                "C3%B3n&ids_rating=A&ids_tiposInversiones=Crownfunding&ids_tiposInversiones=Ventu" +
                "re+Capital&invMin=400&interes=6&plazo=15";
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIAreaspositionabsolutPane
        {
            get
            {
                if ((this.mUIAreaspositionabsolutPane == null))
                {
                    this.mUIAreaspositionabsolutPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".areas { position: absolute; top: 150px;";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIAreaspositionabsolutPane.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
                    #endregion
                }
                return this.mUIAreaspositionabsolutPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIAreaspositionabsolutPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowIntWindow2 : BrowserWindow
    {
        
        public UIHomePageStartGrowIntWindow2()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - StartGrow");
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateStartGrowDocument2 UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument2(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateStartGrowDocument2 mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument2 : HtmlDocument
    {
        
        public UICreateStartGrowDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create?IdsToAdd=4";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIInversiones0TiposInvComboBox
        {
            get
            {
                if ((this.mUIInversiones0TiposInvComboBox == null))
                {
                    this.mUIInversiones0TiposInvComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "inversiones_0__TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "inversiones[0].TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "4";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"inversiones[0].TiposInversionSelec";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIInversiones0TiposInvComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0TiposInvComboBox;
            }
        }
        
        public HtmlEdit UIInversiones0CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones0CuotaEdit == null))
                {
                    this.mUIInversiones0CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_0__Cuota";
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[0].Cuota";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[0].Cuota\" id=\"inversio";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones0CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0CuotaEdit;
            }
        }
        
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUIContinuarButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIInversiones0TiposInvComboBox;
        
        private HtmlEdit mUIInversiones0CuotaEdit;
        
        private HtmlInputButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowInterWindow : BrowserWindow
    {
        
        public UICreateStartGrowInterWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Create - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateStartGrowDocument3 UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument3(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateStartGrowDocument3 mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument3 : HtmlDocument
    {
        
        public UICreateStartGrowDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIHaintroducidounacuotCustom
        {
            get
            {
                if ((this.mUIHaintroducidounacuotCustom == null))
                {
                    this.mUIHaintroducidounacuotCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIHaintroducidounacuotCustom.SearchProperties["TagName"] = "LI";
                    this.mUIHaintroducidounacuotCustom.SearchProperties["Id"] = null;
                    this.mUIHaintroducidounacuotCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIHaintroducidounacuotCustom.FilterProperties["Class"] = null;
                    this.mUIHaintroducidounacuotCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIHaintroducidounacuotCustom.FilterProperties["InnerText"] = "Ha introducido una cuota incorrecta en G";
                    this.mUIHaintroducidounacuotCustom.FilterProperties["TagInstance"] = "6";
                    this.mUIHaintroducidounacuotCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIHaintroducidounacuotCustom;
            }
        }
        
        public HtmlCustom UIHaintroducidounacuotCustom1
        {
            get
            {
                if ((this.mUIHaintroducidounacuotCustom1 == null))
                {
                    this.mUIHaintroducidounacuotCustom1 = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUIHaintroducidounacuotCustom1.SearchProperties["TagName"] = "LI";
                    this.mUIHaintroducidounacuotCustom1.SearchProperties["Id"] = null;
                    this.mUIHaintroducidounacuotCustom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIHaintroducidounacuotCustom1.FilterProperties["Class"] = null;
                    this.mUIHaintroducidounacuotCustom1.FilterProperties["ControlDefinition"] = null;
                    this.mUIHaintroducidounacuotCustom1.FilterProperties["InnerText"] = "Ha introducido una cuota incorrecta en S";
                    this.mUIHaintroducidounacuotCustom1.FilterProperties["TagInstance"] = "6";
                    this.mUIHaintroducidounacuotCustom1.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIHaintroducidounacuotCustom1;
            }
        }
        
        public HtmlCustom UINohaseleccionadountiCustom
        {
            get
            {
                if ((this.mUINohaseleccionadountiCustom == null))
                {
                    this.mUINohaseleccionadountiCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUINohaseleccionadountiCustom.SearchProperties["TagName"] = "LI";
                    this.mUINohaseleccionadountiCustom.SearchProperties["Id"] = null;
                    this.mUINohaseleccionadountiCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUINohaseleccionadountiCustom.FilterProperties["Class"] = null;
                    this.mUINohaseleccionadountiCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUINohaseleccionadountiCustom.FilterProperties["InnerText"] = "No ha seleccionado un tipo de inversión ";
                    this.mUINohaseleccionadountiCustom.FilterProperties["TagInstance"] = "6";
                    this.mUINohaseleccionadountiCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUINohaseleccionadountiCustom;
            }
        }
        
        public HtmlCustom UICuotayTipodeInversióCustom
        {
            get
            {
                if ((this.mUICuotayTipodeInversióCustom == null))
                {
                    this.mUICuotayTipodeInversióCustom = new HtmlCustom(this);
                    #region Criterio de búsqueda
                    this.mUICuotayTipodeInversióCustom.SearchProperties["TagName"] = "LI";
                    this.mUICuotayTipodeInversióCustom.SearchProperties["Id"] = null;
                    this.mUICuotayTipodeInversióCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUICuotayTipodeInversióCustom.FilterProperties["Class"] = null;
                    this.mUICuotayTipodeInversióCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUICuotayTipodeInversióCustom.FilterProperties["InnerText"] = "Cuota y Tipo de Inversión incorrectos en";
                    this.mUICuotayTipodeInversióCustom.FilterProperties["TagInstance"] = "6";
                    this.mUICuotayTipodeInversióCustom.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUICuotayTipodeInversióCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIHaintroducidounacuotCustom;
        
        private HtmlCustom mUIHaintroducidounacuotCustom1;
        
        private HtmlCustom mUINohaseleccionadountiCustom;
        
        private HtmlCustom mUICuotayTipodeInversióCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowIntWindow3 : BrowserWindow
    {
        
        public UIHomePageStartGrowIntWindow3()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - StartGrow");
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateStartGrowDocument4 UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument4(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateStartGrowDocument4 mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument4 : HtmlDocument
    {
        
        public UICreateStartGrowDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create?IdsToAdd=6";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlComboBox UIInversiones0TiposInvComboBox
        {
            get
            {
                if ((this.mUIInversiones0TiposInvComboBox == null))
                {
                    this.mUIInversiones0TiposInvComboBox = new HtmlComboBox(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "inversiones_0__TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "inversiones[0].TiposInversionSelected";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "3";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"inversiones[0].TiposInversionSelec";
                    this.mUIInversiones0TiposInvComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIInversiones0TiposInvComboBox.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0TiposInvComboBox;
            }
        }
        
        public HtmlEdit UIInversiones0CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones0CuotaEdit == null))
                {
                    this.mUIInversiones0CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_0__Cuota";
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[0].Cuota";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[0].Cuota\" id=\"inversio";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones0CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0CuotaEdit;
            }
        }
        
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUIContinuarButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlComboBox mUIInversiones0TiposInvComboBox;
        
        private HtmlEdit mUIInversiones0CuotaEdit;
        
        private HtmlInputButton mUIContinuarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIHomePageStartGrowIntWindow4 : BrowserWindow
    {
        
        public UIHomePageStartGrowIntWindow4()
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - StartGrow";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - StartGrow");
            this.WindowTitles.Add("SelectProyectosForInversion - StartGrow");
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateStartGrowDocument5 UICreateStartGrowDocument
        {
            get
            {
                if ((this.mUICreateStartGrowDocument == null))
                {
                    this.mUICreateStartGrowDocument = new UICreateStartGrowDocument5(this);
                }
                return this.mUICreateStartGrowDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateStartGrowDocument5 mUICreateStartGrowDocument;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UICreateStartGrowDocument5 : HtmlDocument
    {
        
        public UICreateStartGrowDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - StartGrow";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Inversions/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44358/Inversions/Create?IdsToAdd=3";
            this.WindowTitles.Add("Create - StartGrow");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIInversiones0CuotaEdit
        {
            get
            {
                if ((this.mUIInversiones0CuotaEdit == null))
                {
                    this.mUIInversiones0CuotaEdit = new HtmlEdit(this);
                    #region Criterio de búsqueda
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inversiones_0__Cuota";
                    this.mUIInversiones0CuotaEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "inversiones[0].Cuota";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"inversiones[0].Cuota\" id=\"inversio";
                    this.mUIInversiones0CuotaEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIInversiones0CuotaEdit.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIInversiones0CuotaEdit;
            }
        }
        
        public HtmlDiv UIAreaspositionabsolutPane
        {
            get
            {
                if ((this.mUIAreaspositionabsolutPane == null))
                {
                    this.mUIAreaspositionabsolutPane = new HtmlDiv(this);
                    #region Criterio de búsqueda
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIAreaspositionabsolutPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".areas { position: absolute; top: 150px;";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIAreaspositionabsolutPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIAreaspositionabsolutPane.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIAreaspositionabsolutPane;
            }
        }
        
        public HtmlInputButton UIContinuarButton
        {
            get
            {
                if ((this.mUIContinuarButton == null))
                {
                    this.mUIContinuarButton = new HtmlInputButton(this);
                    #region Criterio de búsqueda
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Continuar";
                    this.mUIContinuarButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\" type=\"submit\" va";
                    this.mUIContinuarButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "17";
                    this.mUIContinuarButton.WindowTitles.Add("Create - StartGrow");
                    #endregion
                }
                return this.mUIContinuarButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIInversiones0CuotaEdit;
        
        private HtmlDiv mUIAreaspositionabsolutPane;
        
        private HtmlInputButton mUIContinuarButton;
        #endregion
    }
}
